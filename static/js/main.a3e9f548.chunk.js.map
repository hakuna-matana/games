{"version":3,"sources":["components/Tictactoe/Tictactoe.module.scss","components/Main/Main.module.scss","components/Tictactoe/TictactoeStore.js","components/Tictactoe/Tictactoe.jsx","components/Main/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","wrapper","table","row","cell","btn","message","cross","zero","title","TictactoeStore","_this","this","Object","classCallCheck","size","data","gameStarted","whoWalkNow","createNullData","i","j","getNullData","handlerStroke","rIndex","cIndex","newData","copyArray","arr","Array","copy","length","deadHeat","isVictory","victory","leftDiagonal","push","checkRow","rightDiagonal","verticalData","forEach","index","prevElem","findWinner","winner","Tictactoe","_React$Component","props","possibleConstructorReturn","getPrototypeOf","call","store","setNullData","setState","state","gameOver","getStyle","target","s","inherits","createClass","key","value","_this2","react","className","map","item","concat","onClick","React","Main","apply","arguments","Tictactoe_Tictactoe","App","react_default","a","createElement","Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a3e9f548.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tictactoe_wrapper__2vrMt\",\"table\":\"Tictactoe_table__1-AOh\",\"row\":\"Tictactoe_row__1azLT\",\"cell\":\"Tictactoe_cell__2oQK7\",\"btn\":\"Tictactoe_btn__23Qbm\",\"message\":\"Tictactoe_message__mN3Fq\",\"cross\":\"Tictactoe_cross__lF-MI\",\"zero\":\"Tictactoe_zero__GPqan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Main_wrapper__1YPAv\",\"title\":\"Main_title__3GtJ7\"};","export class TictactoeStore {\r\n    size = 3;\r\n    data = [];\r\n    gameStarted = false;\r\n    whoWalkNow = null;\r\n\r\n    constructor() {\r\n        this.createNullData();\r\n    }\r\n    createNullData = () => {\r\n        if (!this.size) return;\r\n        for (let i = 0; i < this.size; i++) {\r\n            this.data[i] = [];\r\n            for (let j = 0; j < this.size; j++) {\r\n                this.data[i][j] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    getNullData = () => {\r\n        let data = [];\r\n        if (!this.size) return;\r\n        for (let i = 0; i < this.size; i++) {\r\n              data[i] = [];\r\n            for (let j = 0; j < this.size; j++) {\r\n              data[i][j] = null;\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    handlerStroke = (rIndex, cIndex, data) => {\r\n        let newData = copyArray(data);\r\n        if (!this.gameStarted) {\r\n            this.gameStarted = true;\r\n            this.whoWalkNow = 'cross';\r\n        } else {\r\n            this.whoWalkNow = this.whoWalkNow === 'cross' ? 'zero' : 'cross';\r\n        }\r\n        // newData[rIndex][cIndex] = {};\r\n        // newData[rIndex][cIndex].type = this.whoWalkNow;\r\n        newData[rIndex][cIndex] = this.whoWalkNow;\r\n        return newData;\r\n    }\r\n\r\n    deadHeat = (data) => {\r\n        if (!data.length) return false;\r\n        for (let i = 0; i < data.length; i++) {\r\n            let row = data[i];\r\n            for (let j = 0; j < row.length; j++) {\r\n                if (!row[j]) {\r\n                    return false\r\n                };\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isVictory = (data) => {\r\n        let victory = false;\r\n        if (!data.length) return false;\r\n        //Заполнена диагональ слева направо\r\n        let leftDiagonal = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            leftDiagonal.push(data[i][i]);\r\n        }\r\n        if (this.checkRow(leftDiagonal)) victory = true;\r\n    \r\n        // Заполнен диагональ справа налево\r\n        let rightDiagonal = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            rightDiagonal.push(data[data.length-1-i][i]);\r\n        }\r\n        if (this.checkRow(rightDiagonal)) victory = true;\r\n    \r\n        // Заполнен один из рядов по вертикали\r\n        let verticalData = [[],[],[]];\r\n        data.forEach((row, index)=>{\r\n            // if (victory) return;\r\n            for (let i = 0; i < row.length; i++) {\r\n                verticalData[i][index] = row[i]\r\n            }\r\n        });\r\n        for (let i = 0; i < verticalData.length; i++) {\r\n            if (this.checkRow(verticalData[i])) victory = true;\r\n        }\r\n    \r\n        // Заполнен один из рядов по горизонтали\r\n        for (let i = 0; i < data.length; i++) {\r\n           if (this.checkRow(data[i])) victory = true;\r\n        }\r\n        return victory;\r\n    }\r\n\r\n    //Проверяем что в одномерном массиве все элементы одинаковые\r\n\r\n    checkRow = (arr) => {\r\n        if (!arr.length) return false;\r\n        let prevElem = arr[0];\r\n        if (!prevElem) return false;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] !== prevElem) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    findWinner = (data) => {\r\n        let winner = null;\r\n        if (!data.length) return false;\r\n        //Заполнена диагональ слева направо\r\n        let leftDiagonal = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            leftDiagonal.push(data[i][i]);\r\n        }\r\n        if (this.checkRow(leftDiagonal)) {\r\n            winner = leftDiagonal[0];\r\n            return winner;\r\n        };\r\n    \r\n        // Заполнен диагональ справа налево\r\n        let rightDiagonal = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            rightDiagonal.push(data[data.length-1-i][i]);\r\n        }\r\n        if (this.checkRow(rightDiagonal)) {\r\n            winner = rightDiagonal[0];\r\n            return winner;\r\n        };\r\n    \r\n        // Заполнен один из рядов по вертикали\r\n        let verticalData = [[],[],[]];\r\n        data.forEach((row, index)=>{\r\n            for (let i = 0; i < row.length; i++) {\r\n                verticalData[i][index] = row[i]\r\n            }\r\n        });\r\n        for (let i = 0; i < verticalData.length; i++) {\r\n            if (this.checkRow(verticalData[i])) {\r\n                winner = verticalData[i][0];\r\n                return winner;\r\n            };\r\n        }\r\n    \r\n        // Заполнен один из рядов по горизонтали\r\n        for (let i = 0; i < data.length; i++) {\r\n           if (this.checkRow(data[i])) {\r\n            winner = data[i][0];\r\n            return winner;\r\n           };\r\n        }\r\n        return winner;\r\n    }\r\n}\r\n\r\nfunction copyArray(arr) {\r\n    if (arr instanceof Array) {\r\n        let copy = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n            copy[i] = copyArray(arr[i]);\r\n        }\r\n        return copy;\r\n    }\r\n    return arr;\r\n}","import * as React from 'react';\r\nimport s from './Tictactoe.module.scss';\r\nimport { TictactoeStore } from './TictactoeStore';\r\n\r\nexport class Tictactoe extends React.Component {\r\n    store = new TictactoeStore();\r\n     \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n        }\r\n    }\r\n\r\n    setNullData = () => {\r\n        this.setState({data: this.store.getNullData()})\r\n    }\r\n\r\n    handlerStroke = (rIndex, cIndex) => {\r\n        let target = this.state.data[rIndex][cIndex];\r\n        if (target) return;\r\n        if (this.gameOver()) {\r\n            return;\r\n        }\r\n        this.setState((state, props) => {\r\n            let data = state.data;\r\n            return {data: this.store.handlerStroke(rIndex, cIndex, data)}\r\n        });\r\n    }\r\n\r\n    getStyle = (rIndex, cIndex) => {\r\n        let target = this.state.data[rIndex][cIndex];\r\n        if (!target) return \"\";\r\n        return s[target];\r\n    }\r\n\r\n    gameOver = () => {\r\n        let data = this.state.data;\r\n        if (this.store.deadHeat(data)) {\r\n            return true;\r\n        }\r\n        if (this.store.isVictory(data)) return true;\r\n        return false; \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setNullData();\r\n    }\r\n\r\n    render() {\r\n        let data = this.state.data;\r\n        const message = () => {\r\n            let winner = this.store.findWinner(data);\r\n            if (this.store.deadHeat(data)) {\r\n               return <p className={s.message}>Игра окончена! Закончились ходы.</p>\r\n            }\r\n            if (winner) {\r\n                return <p className={s.message}>Игра окончена! \r\n                Победил {winner === 'cross' ? 'крестик' : 'нолик'}!</p>\r\n             }\r\n            return null;\r\n        }\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <div className={s.table}>\r\n                    {this.store.data.length ? this.state.data.map((row, rIndex)=>(\r\n                        <div className={s.row} key={'row' + rIndex}>\r\n                            {row.map((item, cIndex) => (\r\n                                <div \r\n                                    key={'cell' + cIndex} \r\n                                    className={`${s.cell} ${this.getStyle(rIndex, cIndex)}`} \r\n                                    onClick={() => this.handlerStroke(rIndex, cIndex)}/>\r\n                            ))}\r\n                        </div>\r\n                    )) : null}\r\n                </div>\r\n                {message()}\r\n                <button className={s.btn} onClick={this.setNullData}>Новая игра</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport s from './Main.module.scss';\r\nimport {Tictactoe} from '../Tictactoe/Tictactoe';\r\n\r\nexport class Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <h1 className={s.title}>Крестики-нолики</h1>\r\n                <Tictactoe />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {Main} from './components/Main/Main'\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}