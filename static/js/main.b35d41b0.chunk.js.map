{"version":3,"sources":["components/Tictactoe/Tictactoe.module.scss","components/Message/Message.module.scss","components/Main/Main.module.scss","components/Timer/Timer.module.scss","components/Icon/Icon.module.scss","components/Tictactoe/TictactoeStore.js","components/Timer/Timer.jsx","components/Icon/Icon.jsx","components/Message/Message.jsx","components/Tictactoe/Tictactoe.jsx","components/Main/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","wrapper","header","content","footer","title","radioGroup","label","table","row","cell","btn","message","cross","zero","winner","container","open","icon","timer","close","Translation","TictactoeStore","_this","this","Object","classCallCheck","size","gameStarted","whoWalkNow","mode","getNullData","data","i","j","handlerStroke","rIndex","cIndex","newData","deepClone","name","handlerStrokeBot","coord","botMove","_coord","slicedToArray","rI","lI","coordForWin","coordForNextMove","botMoveRandom","found","searchInFirstDiaronal","searchInSecondDiaronal","rowSearch","columnSearch","emptyCells","concat","toConsumableArray","searchRandomItemFromArray","emptyCellsCount","length","elemName","push","arr","Math","floor","random","movesOver","getWinner","setWinnerStyle","checkLeftDiagonal","checkRightDiagonal","checkRow","columnIndex","findWinner–°olumnIndex","firstElem","obj","Array","copy","key","hasOwnProperty","Timer","_React$Component","props","possibleConstructorReturn","getPrototypeOf","call","timerWasStoped","clearTimer","clearInterval","setState","time","setTimer","onChange","setInterval","state","parseInt","getTime","value","seconds","minutes","hours","inherits","createClass","nextProps","nextState","stop","react","className","s","React","Icon","apply","arguments","Message","buttonHandler","e","confirmationHandler","isOpen","onClick","stopPropagation","Icon_Icon","Tictactoe","Map","store","timerStoped","setNullData","loading","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","gameOver","setTimeout","_x","_x2","getStyle","getWinnerStyle","startNewGame","modeHandler","selectMode","id","type","checked","htmlFor","messageConfirm","_this2","Timer_Timer","map","item","Message_Message","Main","Tictactoe_Tictactoe","App","react_default","createElement","Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b35d41b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tictactoe_wrapper__2vrMt\",\"header\":\"Tictactoe_header__1TmCx\",\"content\":\"Tictactoe_content__13_zw\",\"footer\":\"Tictactoe_footer__3J_oj\",\"title\":\"Tictactoe_title__PFeID\",\"radioGroup\":\"Tictactoe_radioGroup__w0qXW\",\"label\":\"Tictactoe_label__2z3nw\",\"table\":\"Tictactoe_table__1-AOh\",\"row\":\"Tictactoe_row__1azLT\",\"cell\":\"Tictactoe_cell__2oQK7\",\"btn\":\"Tictactoe_btn__23Qbm\",\"message\":\"Tictactoe_message__mN3Fq\",\"cross\":\"Tictactoe_cross__lF-MI\",\"zero\":\"Tictactoe_zero__GPqan\",\"winner\":\"Tictactoe_winner__S5mvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Message_wrapper__9Qpyl\",\"container\":\"Message_container__18Idv\",\"open\":\"Message_open__2sO4A\",\"header\":\"Message_header__1YVGB\",\"content\":\"Message_content__3ymKS\",\"footer\":\"Message_footer__2C_R6\",\"btn\":\"Message_btn__1h5GJ\",\"icon\":\"Message_icon__1tp6u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Main_wrapper__1YPAv\",\"title\":\"Main_title__3GtJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__2KmgB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"close\":\"Icon_close__nJogP\"};","/**\r\n * –§–æ—Ä–º–∞—Ç –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏\r\n * [[{name: \"cross\"|\"zero\"|null, \r\n *    winner: boolean\r\n *   },{...},{...}],\r\n *  [{...},{...},{...}],\r\n *  [{...},{...},{...}]\r\n * ]\r\n */\r\n\r\nexport const Translation = {\r\n  cross: \"–∫—Ä–µ—Å—Ç–∏–∫\",\r\n  zero: \"–Ω–æ–ª–∏–∫\"\r\n}\r\n\r\nexport class TictactoeStore {\r\n  size = 3;\r\n  gameStarted = false;\r\n  whoWalkNow = null;\r\n  mode = \"alone\";\r\n\r\n  /**\r\n   * –§–æ—Ä–º–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é data —Å –ø—É—Å—Ç—ã–º–∏ –∫–ª–µ—Ç–∫–∞–º–∏,\r\n   * –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ —Ä–∞–∑–º–µ—Ä–µ –ø–æ–ª—è size \r\n   */\r\n  getNullData = () => {\r\n    let data = [];\r\n    if (!this.size) return;\r\n    for (let i = 0; i < this.size; i++) {\r\n      data[i] = [];\r\n      for (let j = 0; j < this.size; j++) {\r\n        data[i][j] = {};\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /** –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –∫—Ä–µ—Å—Ç–∏–∫–æ–º –∏–ª–∏ –Ω–æ–ª–∏–∫–æ–º, \r\n   *  –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ —Ç–æ–º, –∫—Ç–æ —Ö–æ–¥–∏–ª –¥–æ —ç—Ç–æ–≥–æ  */\r\n  handlerStroke = (rIndex, cIndex, data, mode) => {\r\n    let newData = deepClone(data);\r\n    if (!this.gameStarted) {\r\n      this.gameStarted = true;\r\n      this.whoWalkNow = 'cross';\r\n      if (mode === \"bot\") {\r\n        this.mode = \"bot\"\r\n      } else {\r\n        this.mode = \"alone\"\r\n      }\r\n    } else {\r\n      this.whoWalkNow = this.whoWalkNow === 'cross' ? 'zero' : 'cross';\r\n    }\r\n    newData[rIndex][cIndex].name = this.whoWalkNow;\r\n    return newData;\r\n  }\r\n\r\n  handlerStrokeBot = (data) => {\r\n    let newData = deepClone(data);\r\n    let coord = this.botMove(newData);\r\n    if (coord) {\r\n      let [rI, lI] = coord;\r\n      this.whoWalkNow = 'zero';\r\n      newData[rI][lI].name = this.whoWalkNow;\r\n      return newData;\r\n    }\r\n    return data;\r\n  }\r\n\r\n  botMove = (data) => {\r\n    // –ø–æ–∏—Å–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π –±–æ—Ç (–Ω–æ–ª–∏–∫) –º–æ–∂–µ—Ç –ø–æ–±–µ–¥–∏—Ç—å\r\n    let coord = this.coordForWin(data, \"zero\");\r\n    if (coord) return coord;\r\n    // –ø–æ–∏—Å–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ (–∫—Ä–µ—Å—Ç–∏–∫) –º–æ–∂–µ—Ç –ø—Ä–æ–∏–≥—Ä–∞—Ç—å\r\n    coord = this.coordForWin(data, \"cross\");\r\n    if (coord) return coord;\r\n    // –ø–æ–∏—Å–∫ –ø—É—Å—Ç–æ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞ —Ç–æ–π –∂–µ –¥–∏–∞–≥–æ–Ω–∞–ª–∏, —Å—Ç—Ä–æ–∫–µ, —Ä—è–¥—É, –≤ –∫–æ—Ç–æ—Ä—É—é —Å—Ö–æ–¥–∏–ª –∏–≥—Ä–æ–∫\r\n    // coord = this.coordForWin(data, \"cross\", 2);\r\n    // if (coord) return coord;\r\n    coord = this.coordForNextMove(data, \"cross\");\r\n    if (coord) return coord;\r\n    coord = this.botMoveRandom(data);\r\n    return coord;\r\n  }\r\n\r\n  /**\r\n   * –ò—â–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –ø–æ–±–µ–¥—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ –∏–∑ –¥–≤—É—Ö –∑–Ω–∞—á–µ–Ω–∏–π\r\n   * [rigthIndex, leftIndex] –µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–π —Ö–æ–¥, –∏–ª–∏ null, –µ—Å–ª–∏ –Ω–µ—Ç\r\n   */\r\n  coordForWin = (data, name) => {\r\n    let emptyCellsCount = 1;\r\n    let found = this.searchInFirstDiaronal(data, name, emptyCellsCount);\r\n    if (found) return found;\r\n    found = this.searchInSecondDiaronal(data, name, emptyCellsCount);\r\n    if (found) return found;\r\n    found = this.rowSearch(data, name, emptyCellsCount);\r\n    if (found) return found;\r\n    found = this.columnSearch(data, name, emptyCellsCount);\r\n    return found;\r\n  }\r\n  /**\r\n   * –ò—â–µ–º —Ä–∞–Ω–¥–æ–º–Ω—É—é –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—É –¥–ª—è —Ö–æ–¥–∞ –Ω–∞ —Ç–æ—Ç –∂–µ —Ä—è–¥, —Å—Ç—Ä–æ–∫—É –∏–ª–∏ –¥–∏–∞–≥–æ–Ω–∞–ª—å,\r\n   * –Ω–∞ –∫–æ—Ç–æ—Ä—É—é —Å—Ö–æ–¥–∏–ª –∏–≥—Ä–æ–∫. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è [rigthIndex, leftIndex],\r\n   * –µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–π —Ö–æ–¥, –∏–ª–∏ null, –µ—Å–ª–∏ –Ω–µ—Ç\r\n   */\r\n  coordForNextMove = (data, name) => {\r\n    let emptyCellsCount = 2;\r\n    let emptyCells = [];\r\n    let found = this.searchInFirstDiaronal(data, name, emptyCellsCount);\r\n    if (found) emptyCells = [...emptyCells, ...found];\r\n    found = this.searchInSecondDiaronal(data, name, emptyCellsCount);\r\n    if (found) emptyCells = [...emptyCells, ...found];\r\n    found = this.rowSearch(data, name, emptyCellsCount);\r\n    if (found) emptyCells = [...emptyCells, ...found];\r\n    found = this.columnSearch(data, name, emptyCellsCount);\r\n    if (found) emptyCells = [...emptyCells, ...found];\r\n    return this.searchRandomItemFromArray(emptyCells);\r\n  }\r\n  /**\r\n   * –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–≥–æ–Ω–∞–ª—å —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ \r\n   * */\r\n  searchInSecondDiaronal = (data, name, emptyCellsCount) => {\r\n    let emptyCells = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      let elemName = data[data.length - 1 - i][i].name;\r\n      if (elemName && elemName !== name) return null;\r\n      if (!elemName) emptyCells.push([data.length - 1 - i,i]);\r\n    }\r\n    if (emptyCells.length === emptyCellsCount) {\r\n      return emptyCells.length > 1 ? emptyCells :emptyCells[0];\r\n    }\r\n    return null;\r\n  }\r\n  /**\r\n   * –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–≥–æ–Ω–∞–ª—å —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ \r\n   * */\r\n  searchInFirstDiaronal = (data, name, emptyCellsCount) => {\r\n    let emptyCells = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      let elemName = data[i][i].name;      \r\n      if (elemName && elemName !== name) return null;\r\n      if (!elemName) emptyCells.push([i,i]);\r\n    }\r\n    if (emptyCells.length === emptyCellsCount) {\r\n      return emptyCells.length > 1 ? emptyCells :emptyCells[0];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  rowSearch = (data, name, emptyCellsCount) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      let emptyCells = [];\r\n      for (let j = 0; j < data[i].length; j++) {\r\n        let elemName = data[i][j].name;\r\n        if (elemName && elemName !== name) {\r\n          emptyCells = [];\r\n          break;\r\n        }\r\n        if (!elemName) emptyCells.push([i,j]); \r\n      }\r\n      if (emptyCells.length === emptyCellsCount) {\r\n        return emptyCells.length > 1 ? emptyCells :emptyCells[0];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  columnSearch = (data, name, emptyCellsCount) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      let emptyCells = [];\r\n      for (let j = 0; j < data[i].length; j++) {\r\n        let elemName = data[j][i].name;\r\n        if (elemName && elemName !== name) {\r\n          emptyCells = [];\r\n          break;\r\n        }\r\n        if (!elemName) emptyCells.push([j,i]); \r\n      }\r\n      if (emptyCells.length === emptyCellsCount) {\r\n        return emptyCells.length > 1 ? emptyCells :emptyCells[0];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  searchRandomItemFromArray = (arr) => {\r\n    if (!arr) return;\r\n    let randomIndex = Math.floor(Math.random() * (arr.length - 0)) + 0;\r\n    return arr[randomIndex];\r\n  }\r\n\r\n  botMoveRandom = (data) => {\r\n    let emptyCells = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      let row = data[i];\r\n      for (let j = 0; j < row.length; j++) {\r\n        if (!row[j].name) emptyCells.push([i, j]);\r\n      }\r\n    }\r\n    return this.searchRandomItemFromArray(emptyCells);\r\n  }\r\n\r\n  /**\r\n   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ö–æ–¥—ã, \r\n   * –µ—Å–ª–∏ –≤—Å–µ –∫–ª–µ—Ç–∫–∏ –∑–∞–Ω—è—Ç—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, \r\n   * –µ—Å–ª–∏ –µ—Å—Ç—å –ø—É—Å—Ç—ã–µ –∫–ª–µ—Ç–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false\r\n   */\r\n  movesOver = (data) => {\r\n    if (!data.length) return false;\r\n    for (let i = 0; i < data.length; i++) {\r\n      for (let j = 0; j < data.length; j++) {\r\n        if (!data[i][j].name) {\r\n          return false;\r\n        };\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * –ù–∞—Ö–æ–¥–∏—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç null,\r\n   * –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç name(–µ–≥–æ –∏–º—è)\r\n   */\r\n  getWinner = (data) => {\r\n    if (!data.length) return null;\r\n    for (let i = 0; i < data.length; i++) {\r\n      for (let j = 0; j < data.length; j++) {\r\n        if (data[i][j].winner) {\r\n          return data[i][j].name;\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  /**\r\n   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –ø–æ–±–µ–¥—É \r\n   * –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–ª–µ—Ç–∫–∞–º —Å–≤–æ–π—Å—Ç–≤–æ winner –≤ true,\r\n   * –µ—Å–ª–∏ –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä—è–¥—É –ø–æ–±–µ–¥–∏—Ç–µ–ª—è\r\n   */\r\n  setWinnerStyle = (data) => {\r\n    let newData = deepClone(data);\r\n    if (!newData.length) return newData;\r\n    let isWinner = false;\r\n\r\n    /** –ó–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–∏–∞–≥–æ–Ω–∞–ª—å —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ */\r\n    isWinner = this.checkLeftDiagonal(newData);\r\n    if (isWinner) {\r\n      for (let i = 0; i < newData.length; i++) {\r\n        newData[i][i].winner = true;\r\n      }\r\n      return newData;\r\n    }\r\n\r\n    /** –ó–∞–ø–æ–ª–Ω–µ–Ω –¥–∏–∞–≥–æ–Ω–∞–ª—å —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ */\r\n    isWinner = this.checkRightDiagonal(newData);\r\n    if (isWinner) {\r\n      for (let i = 0; i < newData.length; i++) {\r\n        newData[data.length - 1 - i][i].winner = true;\r\n      }\r\n      return newData;\r\n    }\r\n\r\n    /** –ó–∞–ø–æ–ª–Ω–µ–Ω –æ–¥–∏–Ω –∏–∑ —Ä—è–¥–æ–≤ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ */\r\n    for (let i = 0; i < newData.length; i++) {\r\n      isWinner = this.checkRow(newData[i]);\r\n      if (isWinner) {\r\n        for (let j = 0; j < newData[i].length; j++) {\r\n          newData[i][j].winner = true;\r\n        }\r\n        return newData;\r\n      }\r\n    }\r\n\r\n    /** –ó–∞–ø–æ–ª–Ω–µ–Ω –æ–¥–∏–Ω –∏–∑ —Ä—è–¥–æ–≤ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ */\r\n    let columnIndex = this.findWinner–°olumnIndex(newData);\r\n    isWinner = columnIndex !== -1 ? true : false;\r\n    if (isWinner) {\r\n      for (let i = 0; i < newData.length; i++) {\r\n        newData[i][columnIndex].winner = true;\r\n      }\r\n      return newData;\r\n    }\r\n    return newData;\r\n  }\r\n\r\n  checkRow = (data) => {\r\n    if (!data.length) return false;\r\n    let firstElem = data[0].name;\r\n    if (!firstElem) return false;\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].name !== firstElem) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  checkLeftDiagonal = (data) => {\r\n    let firstElem = data[0][0].name;\r\n    if (!firstElem) return false;\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i][i].name !== firstElem) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  checkRightDiagonal = (data) => {\r\n    let firstElem = data[data.length - 1][0].name;\r\n    if (!firstElem) return false;\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[data.length - 1 - i][i].name !== firstElem) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  findWinner–°olumnIndex = (data) => {\r\n    if (!data.length) return -1;\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      let firstElem = data[0][i].name;\r\n      if (!firstElem) continue;\r\n      let found = true;\r\n      for (let j = 0; j < data.length; j++) {\r\n        if (data[j][i].name !== firstElem) {\r\n          found = false;\r\n          break;\r\n        }\r\n      }\r\n      if (found) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n}\r\n\r\nexport function deepClone(obj) {\r\n  if (obj === null || typeof obj !== \"object\") {\r\n    return obj;\r\n  }\r\n\r\n  if (obj instanceof Array && obj.length) {\r\n    let copy = [];\r\n    for (let i = 0; i < obj.length; i++) {\r\n      copy[i] = deepClone(obj[i]);\r\n    }\r\n    return copy;\r\n  }\r\n\r\n  if (obj instanceof Object) {\r\n    let copy = {};\r\n    for (let key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        copy[key] = deepClone(obj[key]);\r\n      }\r\n    }\r\n    return copy;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as s from \"./Timer.module.scss\";\r\n\r\n/**\r\n * Timer - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç—Å—á–∏—Ç—ã–≤–∞—é—â–∏–π –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ hh:mm:ss / mm:ss / ss\r\n * –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ props:\r\n * value: number - –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö, —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ\r\n * onChange: function - —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤ 1 —Å–µ–∫—É–Ω–¥—É\r\n * stop: boolean - –µ—Å–ª–∏ true, —Ç–æ –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ false - –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è\r\n * label: boolean - –µ—Å–ª–∏ false - –Ω–µ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è \"–í—Ä–µ–º—è: \"\r\n */\r\n\r\nexport class Timer extends React.Component {\r\n    timer;\r\n    timerWasStoped = false;\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTimer();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.stop) {\r\n            clearInterval(this.timer); \r\n            return false;\r\n        }\r\n        if (nextProps.stop === false && this.props.stop === true) {\r\n            this.setTimer();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    clearTimer = () => {\r\n        clearInterval(this.timer);\r\n        this.setState({time: 0})\r\n    } \r\n\r\n    setTimer = () => {\r\n        if (this.props.onChange && typeof this.props.onChange === \"function\") {\r\n            this.timer = setInterval(this.props.onChange, 1000);\r\n            return;\r\n        }\r\n        this.timer = setInterval(() => this.setState((state) => {\r\n            let time = parseInt(state.time);\r\n            return {time: time + 1}\r\n        }), 1000)\r\n    }\r\n\r\n    getTime = (value) => {\r\n        let seconds, minutes, hours;\r\n        seconds = value;\r\n        if (value >= 60) {\r\n            minutes = parseInt(value/60);\r\n            seconds = value - (minutes*60);\r\n        }\r\n        if (minutes >= 60) {\r\n            hours = parseInt(minutes/60);\r\n            minutes = minutes - (hours*60);\r\n        }\r\n        \r\n        let str;\r\n        if (hours) {\r\n            str = `${hours}:${minutes > 9 ? minutes: '0' + minutes}:${seconds > 9 ? seconds: '0' + seconds}`\r\n        } else if (minutes) {\r\n            str = `${minutes}:${seconds > 9 ? seconds: '0' + seconds}`\r\n        } else {\r\n            str = `${seconds}`\r\n        }\r\n        return str;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.timer}>\r\n                {this.props.label ? \"–í—Ä–µ–º—è:\" : null} \r\n                {this.getTime(this.props.value ? this.props.value : this.state.time)}\r\n                </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport s from './Icon.module.scss';\r\n\r\nexport class Icon extends React.Component {\r\n  render() {\r\n    return (\r\n      <i className={`${s[this.props.name]} ${this.props.className}`}></i>\r\n    )\r\n  }\r\n}","import * as React from 'react';\r\nimport s from './Message.module.scss';\r\nimport {Icon} from \"../Icon/Icon\"\r\n\r\nexport class Message extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: true,\r\n      message: \"\",\r\n    }\r\n  }\r\n\r\n  buttonHandler = (e) => {\r\n    if ( typeof this.props.confirmationHandler === \"function\") {\r\n      this.props.confirmationHandler()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      this.props.message ?\r\n      <div className={s.wrapper} onClick={this.buttonHandler}>\r\n        <section className={s.container} onClick={(e) => e.stopPropagation()}>\r\n          <Icon name=\"close\" className={s.icon} onClick={this.buttonHandler}/>\r\n          <header className={s.header}>\r\n            –ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\r\n          </header>\r\n          <main className={s.content}>\r\n            {this.props.message}\r\n          </main>\r\n          <footer className={s.footer}>\r\n            <button className={s.btn} onClick={this.buttonHandler}>–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ</button>\r\n          </footer>\r\n        </section>\r\n      </div> : null\r\n    )\r\n  }\r\n}","import * as React from 'react';\r\nimport s from './Tictactoe.module.scss';\r\nimport { TictactoeStore, Translation } from './TictactoeStore';\r\nimport { Timer } from \"../Timer/Timer\";\r\nimport {Message} from \"../Message/Message\";\r\n\r\nconst ModeTranslate = new Map([\r\n  [\"bot\", \"–°–µ–π—á–∞—Å –∏–¥–µ—Ç –∏–≥—Ä–∞ –≤ —Ä–µ–∂–∏–º–µ –±–æ—Ç–∞\"],\r\n  [\"alone\", \"–°–µ–π—á–∞—Å –∏–¥–µ—Ç –∏–≥—Ä–∞ –≤ —Ä–µ–∂–∏–º–µ —Å–∞–º —Å —Å–æ–±–æ–π\"]\r\n])\r\n\r\nexport class Tictactoe extends React.Component {\r\n  store = new TictactoeStore();\r\n  timerStoped = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      time: 0,\r\n      mode: \"bot\"\r\n    }\r\n  }\r\n\r\n  setNullData = () => {\r\n    this.setState({ data: this.store.getNullData() })\r\n  }\r\n  /**\r\n   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ –∫–ª–µ—Ç–∫—É \r\n   * */\r\n  loading = false;\r\n  handlerStroke = async (rIndex, cIndex) => {\r\n    if (this.loading) return;\r\n    let target = this.state.data[rIndex][cIndex].name;\r\n    if (target) return;\r\n    if (this.gameOver()) return;\r\n    await this.setState((state, props) => {\r\n      let newData = this.store.handlerStroke(rIndex, cIndex, state.data, state.mode);\r\n      newData = this.store.setWinnerStyle(newData);\r\n      return { data: newData }\r\n    });\r\n    if (this.store.mode === \"bot\" && this.store.whoWalkNow === \"cross\") {\r\n      if (this.gameOver()) return;\r\n      this.loading = true;\r\n      await setTimeout(() => this.setState((state, props) => {\r\n        let newData = this.store.handlerStrokeBot(state.data);\r\n        newData = this.store.setWinnerStyle(newData);\r\n        return { data: newData }\r\n      }), 200);\r\n      this.loading = false;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setNullData();\r\n  }\r\n\r\n  getStyle = (rIndex, cIndex) => {\r\n    let name = this.state.data[rIndex][cIndex].name;\r\n    if (!name) return \"\";\r\n    return s[name];\r\n  }\r\n\r\n  getWinnerStyle = (rIndex, cIndex) => {\r\n    let isWinner = this.state.data[rIndex][cIndex].winner;\r\n    if (!isWinner) return \"\";\r\n    return s.winner;\r\n  }\r\n\r\n  /**\r\n   * –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∏–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å - –∑–∞–Ω—è—Ç—ã –≤—Å–µ –∫–ª–µ—Ç–∫–∏ –∏–ª–∏ –µ—Å—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—å\r\n   */\r\n  gameOver = () => {\r\n    let data = this.state.data;\r\n    if (this.store.movesOver(data) || this.store.getWinner(data)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  startNewGame = () => {\r\n    this.setNullData();\r\n    this.store.gameStarted = false;\r\n    this.store.whoWalkNow = null;\r\n    this.clearTimer();\r\n  }\r\n\r\n  clearTimer = () => {\r\n    this.timerStoped = false;\r\n    this.setState({ time: 0 })\r\n  }\r\n\r\n  setTimer = () => {\r\n    this.setState((state) => {\r\n      let time = parseInt(state.time);\r\n      return { time: time + 1 }\r\n    })\r\n  }\r\n  modeHandler = () => {\r\n    this.setState((state) => {\r\n      let mode = state.mode === \"bot\" ? \"alone\" : \"bot\";\r\n      return { mode }\r\n    })\r\n  }\r\n  selectMode = () => {\r\n    return (\r\n      <div className={s.radioGroup}>\r\n        <input \r\n            id=\"radio_bot\"\r\n            type=\"radio\"\r\n            checked={this.state.mode === \"bot\"} \r\n            name=\"mode\"\r\n            onChange={this.modeHandler}\r\n          />\r\n        <label htmlFor=\"radio_bot\" className={s.label}>\r\n          –° –±–æ—Ç–æ–º\r\n        </label>\r\n        <input \r\n            id=\"radio_alone\"\r\n            type=\"radio\" \r\n            checked={this.state.mode === \"alone\"} \r\n            name=\"mode\"\r\n            onChange={this.modeHandler}\r\n          />\r\n        <label htmlFor=\"radio_alone\" className={s.label}>\r\n          –°–∞–º —Å —Å–æ–±–æ–π\r\n        </label>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  messageConfirm = () => {\r\n    this.startNewGame()\r\n  }\r\n\r\n  render() {\r\n    let data = this.state.data;\r\n    const message = () => {\r\n      let winner = this.store.getWinner(data);\r\n      if (winner) {\r\n        this.timerStoped = true;\r\n        return `–ü–æ–±–µ–¥–∏–ª ${Translation[winner]}.`\r\n      }\r\n      if (this.store.movesOver(data)) {    \r\n        this.timerStoped = true;\r\n        return \"–ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ö–æ–¥—ã.\"\r\n      }\r\n      return null;\r\n    }\r\n    return (\r\n      <div className={s.wrapper}>\r\n        <div className={s.header}>\r\n          <h1 className={s.title}>–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏</h1>\r\n          <div className={s.timer}>\r\n          <Timer\r\n            value={this.state.time}\r\n            onChange={this.setTimer}\r\n            stop={this.timerStoped}\r\n            label={false}\r\n        />\r\n        </div>\r\n        </div>\r\n        <div className={s.content}>\r\n        <div className={s.table}>\r\n          {this.state.data.length ? this.state.data.map((row, rIndex) => (\r\n            <div className={s.row} key={'row' + rIndex}>\r\n              {row.map((item, cIndex) => (\r\n                <div\r\n                  key={'cell' + cIndex}\r\n                  className={`${s.cell} ${this.getStyle(rIndex, cIndex)} \r\n                                    ${this.getWinnerStyle(rIndex, cIndex)}\r\n                                    `}\r\n                  onClick={() => this.handlerStroke(rIndex, cIndex)} />\r\n              ))}\r\n            </div>\r\n          )) : null}\r\n        </div>\r\n        {this.selectMode()}\r\n        </div>\r\n        <div className={s.footer}>\r\n          <button className={s.btn} onClick={this.startNewGame}>–ù–æ–≤–∞—è –∏–≥—Ä–∞</button>\r\n        </div>\r\n\r\n        <Message message={message()} confirmationHandler={this.messageConfirm} \r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}","import * as React from 'react';\r\nimport s from './Main.module.scss';\r\nimport {Tictactoe} from '../Tictactoe/Tictactoe';\r\n\r\nexport class Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <Tictactoe />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {Main} from './components/Main/Main'\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}