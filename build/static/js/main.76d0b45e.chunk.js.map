{"version":3,"sources":["components/Tictactoe/Tictactoe.module.scss","components/Main/Main.module.scss","components/Timer/Timer.module.scss","components/Tictactoe/TictactoeStore.js","components/Timer/Timer.jsx","components/Tictactoe/Tictactoe.jsx","components/Main/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","wrapper","title","table","row","cell","btn","message","cross","zero","winner","timer","Translation","TictactoeStore","_this","this","Object","classCallCheck","size","gameStarted","whoWalkNow","getNullData","data","i","j","handlerStroke","rIndex","cIndex","newData","deepClone","name","movesOver","length","getWinner","checkRow","firstElem","checkLeftDiagonal","checkRightDiagonal","findWinnerСolumnIndex","found","setWinnerStyle","columnIndex","obj","Array","copy","key","hasOwnProperty","Timer","_React$Component","props","possibleConstructorReturn","getPrototypeOf","call","timerWasStoped","clearTimer","clearInterval","setState","time","setTimer","onChange","setInterval","state","parseInt","getTime","value","seconds","minutes","hours","concat","inherits","createClass","nextProps","nextState","stop","react","className","s","React","Tictactoe","store","timerStoped","setNullData","gameOver","getStyle","getWinnerStyle","startNewGame","_this2","map","item","onClick","Timer_Timer","Main","apply","arguments","Tictactoe_Tictactoe","App","react_default","a","createElement","Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0EACAA,EAAAC,QAAA,CAAkBC,QAAA,2BAAAC,MAAA,yBAAAC,MAAA,yBAAAC,IAAA,uBAAAC,KAAA,wBAAAC,IAAA,uBAAAC,QAAA,2BAAAC,MAAA,yBAAAC,KAAA,wBAAAC,OAAA,mDCAlBX,EAAAC,QAAA,CAAkBC,QAAA,sBAAAC,MAAA,sCCAlBH,EAAAC,QAAA,CAAkBW,MAAA,0PCILC,EAAc,CACvBJ,MAAO,6CACPC,KAAM,kCAGGI,EAAb,SAAAA,IAAA,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KACIG,KAAO,EADXH,KAEII,aAAc,EAFlBJ,KAGIK,WAAa,KAHjBL,KASIM,YAAc,WACV,IAAIC,EAAO,GACX,GAAKR,EAAKI,KAAV,CACA,IAAK,IAAIK,EAAI,EAAGA,EAAIT,EAAKI,KAAMK,IAAK,CAC9BD,EAAKC,GAAK,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAKI,KAAMM,IAC7BF,EAAKC,GAAGC,GAAK,GAGnB,OAAOF,IAlBfP,KAuBIU,cAAgB,SAACC,EAAQC,EAAQL,GAC7B,IAAIM,EAAUC,EAAUP,GASxB,OARKR,EAAKK,YAINL,EAAKM,WAAiC,UAApBN,EAAKM,WAAyB,OAAS,SAHzDN,EAAKK,aAAc,EACnBL,EAAKM,WAAa,SAItBQ,EAAQF,GAAQC,GAAQG,KAAOhB,EAAKM,WAE7BQ,GAjCfb,KAuCIgB,UAAY,SAACT,GACT,IAAKA,EAAKU,OAAQ,OAAO,EACzB,IAAK,IAAIT,EAAI,EAAGA,EAAID,EAAKU,OAAQT,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKU,OAAQR,IAC7B,IAAKF,EAAKC,GAAGC,GAAGM,KACZ,OAAO,EAInB,OAAO,GAhDff,KAuDIkB,UAAY,SAACX,GACT,IAAKA,EAAKU,OAAQ,OAAO,KACzB,IAAK,IAAIT,EAAI,EAAGA,EAAID,EAAKU,OAAQT,IAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAKU,OAAQR,IAC7B,GAAIF,EAAKC,GAAGC,GAAGd,OACX,OAAOY,EAAKC,GAAGC,GAAGM,KAI9B,OAAO,MAhEff,KAmEImB,SAAW,SAACZ,GACR,IAAKA,EAAKU,OAAQ,OAAO,EACzB,IAAIG,EAAYb,EAAK,GAAGQ,KACxB,IAAKK,EAAW,OAAO,EACvB,IAAK,IAAIZ,EAAI,EAAGA,EAAID,EAAKU,OAAQT,IAC7B,GAAID,EAAKC,GAAGO,OAASK,EAAW,OAAO,EAE3C,OAAO,GA1EfpB,KA6EIqB,kBAAoB,SAACd,GACjB,IAAIa,EAAYb,EAAK,GAAG,GAAGQ,KAC3B,IAAKK,EAAW,OAAO,EACvB,IAAK,IAAIZ,EAAI,EAAGA,EAAID,EAAKU,OAAQT,IAC7B,GAAID,EAAKC,GAAGA,GAAGO,OAASK,EAAW,OAAO,EAE9C,OAAO,GAnFfpB,KAsFIsB,mBAAqB,SAACf,GAClB,IAAIa,EAAYb,EAAKA,EAAKU,OAAO,GAAG,GAAGF,KACvC,IAAKK,EAAW,OAAO,EACvB,IAAK,IAAIZ,EAAI,EAAGA,EAAID,EAAKU,OAAQT,IAC7B,GAAID,EAAKA,EAAKU,OAAO,EAAET,GAAGA,GAAGO,OAASK,EAAW,OAAO,EAE5D,OAAO,GA5FfpB,KA+FIuB,2BAAwB,SAAChB,GACrB,IAAKA,EAAKU,OAAQ,OAAQ,EAE1B,IAAK,IAAIT,EAAI,EAAGA,EAAID,EAAKU,OAAQT,IAAK,CAClC,IAAIY,EAAYb,EAAK,GAAGC,GAAGO,KAC3B,GAAKK,EAAL,CAEA,IADA,IAAII,GAAQ,EACHf,EAAI,EAAGA,EAAIF,EAAKU,OAAQR,IAC7B,GAAIF,EAAKE,GAAGD,GAAGO,OAASK,EAAW,CAC/BI,GAAQ,EACR,MAGR,GAAIA,EACA,OAAOhB,GAGf,OAAQ,GAhHhBR,KAwHIyB,eAAiB,SAAClB,GACd,IAAIM,EAAUC,EAAUP,GACxB,IAAKM,EAAQI,OAAQ,OAAOJ,EAK5B,GADWd,EAAKsB,kBAAkBR,GACpB,CACV,IAAK,IAAIL,EAAI,EAAGA,EAAIK,EAAQI,OAAQT,IAChCK,EAAQL,GAAGA,GAAGb,QAAS,EAE3B,OAAOkB,EAKX,GADWd,EAAKuB,mBAAmBT,GACrB,CACV,IAAK,IAAIL,EAAI,EAAGA,EAAIK,EAAQI,OAAQT,IAChCK,EAAQN,EAAKU,OAAO,EAAET,GAAGA,GAAGb,QAAS,EAEzC,OAAOkB,EAIX,IAAK,IAAIL,EAAI,EAAGA,EAAIK,EAAQI,OAAQT,IAEhC,GADWT,EAAKoB,SAASN,EAAQL,IACnB,CACV,IAAK,IAAIC,EAAI,EAAGA,EAAII,EAAQL,GAAGS,OAAQR,IACnCI,EAAQL,GAAGC,GAAGd,QAAS,EAE3B,OAAOkB,EAKf,IAAIa,EAAc3B,EAAKwB,2BAAsBV,GAE7C,IAD4B,IAAjBa,EACG,CACV,IAAK,IAAIlB,EAAI,EAAGA,EAAIK,EAAQI,OAAQT,IAChCK,EAAQL,GAAGkB,GAAa/B,QAAS,EAErC,OAAOkB,EAEX,OAAOA,IAIR,SAASC,EAAUa,GACtB,GAAY,OAARA,GAA+B,kBAARA,EACzB,OAAOA,EAGT,GAAIA,aAAeC,OAASD,EAAIV,OAAQ,CAEtC,IADA,IAAIY,EAAO,GACFrB,EAAI,EAAGA,EAAImB,EAAIV,OAAQT,IAC9BqB,EAAKrB,GAAKM,EAAUa,EAAInB,IAE1B,OAAOqB,EAGT,GAAIF,aAAe1B,OAAQ,CACzB,IAAI4B,EAAO,GACX,IAAK,IAAIC,KAAOH,EACVA,EAAII,eAAeD,KACrBD,EAAKC,GAAOhB,EAAUa,EAAIG,KAG9B,OAAOD,eC1LAG,EAAb,SAAAC,GAII,SAAAD,EAAYE,GAAO,IAAAnC,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAgC,IACfjC,EAAAE,OAAAkC,EAAA,EAAAlC,CAAAD,KAAAC,OAAAmC,EAAA,EAAAnC,CAAA+B,GAAAK,KAAArC,KAAMkC,KAHVI,gBAAiB,EAEEvC,EAsBnBwC,WAAa,WACTC,cAAczC,EAAKH,OACnBG,EAAK0C,SAAS,CAACC,KAAM,KAxBN3C,EA2BnB4C,SAAW,WACH5C,EAAKmC,MAAMU,UAA2C,oBAAxB7C,EAAKmC,MAAMU,SACzC7C,EAAKH,MAAQiD,YAAY9C,EAAKmC,MAAMU,SAAU,KAGlD7C,EAAKH,MAAQiD,YAAY,kBAAM9C,EAAK0C,SAAS,SAACK,GAE1C,MAAO,CAACJ,KADGK,SAASD,EAAMJ,MACL,MACrB,MAnCW3C,EAsCnBiD,QAAU,SAACC,GACP,IAAIC,EAASC,EAASC,EAmBtB,OAlBAF,EAAUD,EACNA,GAAS,KAETC,EAAUD,EAAiB,IAD3BE,EAAUJ,SAASE,EAAM,MAGzBE,GAAW,KAEXA,GAA2B,IAD3BC,EAAQL,SAASI,EAAQ,MAKzBC,EACG,GAAAC,OAAMD,EAAN,KAAAC,OAAeF,EAAU,EAAIA,EAAS,IAAMA,EAA5C,KAAAE,OAAuDH,EAAU,EAAIA,EAAS,IAAMA,GAChFC,EACJ,GAAAE,OAAMF,EAAN,KAAAE,OAAiBH,EAAU,EAAIA,EAAS,IAAMA,GAE9C,GAAAG,OAAMH,IAtDbnD,EAAK+C,MAAQ,CACTJ,KAAM,GAHK3C,EAJvB,OAAAE,OAAAqD,EAAA,EAAArD,CAAA+B,EAAAC,GAAAhC,OAAAsD,EAAA,EAAAtD,CAAA+B,EAAA,EAAAF,IAAA,oBAAAmB,MAAA,WAYQjD,KAAK2C,aAZb,CAAAb,IAAA,wBAAAmB,MAAA,SAe0BO,EAAWC,GAC7B,OAAID,EAAUE,MACVlB,cAAcxC,KAAKJ,QACZ,KAEY,IAAnB4D,EAAUE,OAAsC,IAApB1D,KAAKkC,MAAMwB,MACvC1D,KAAK2C,YAEF,KAvBf,CAAAb,IAAA,SAAAmB,MAAA,WAkEQ,OACIU,EAAA,qBAAKC,UAAWC,SAAhB,mCAAiC7D,KAAKgD,QAAQhD,KAAKkC,MAAMe,MAAQjD,KAAKkC,MAAMe,MAAQjD,KAAK8C,MAAMJ,WAnE3GV,EAAA,CAA2B8B,aCNdC,EAAb,SAAA9B,GAII,SAAA8B,EAAY7B,GAAO,IAAAnC,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA+D,IACfhE,EAAAE,OAAAkC,EAAA,EAAAlC,CAAAD,KAAAC,OAAAmC,EAAA,EAAAnC,CAAA8D,GAAA1B,KAAArC,KAAMkC,KAJV8B,MAAQ,IAAIlE,EAGOC,EAFnBkE,aAAc,EAEKlE,EAQnBmE,YAAc,WACVnE,EAAK0C,SAAS,CAAClC,KAAMR,EAAKiE,MAAM1D,iBATjBP,EAYnBW,cAAgB,SAACC,EAAQC,GACRb,EAAK+C,MAAMvC,KAAKI,GAAQC,GAAQG,MAEzChB,EAAKoE,YAGTpE,EAAK0C,SAAS,SAACK,EAAOZ,GAClB,IAAIrB,EAAUd,EAAKiE,MAAMtD,cAAcC,EAAQC,EAAQkC,EAAMvC,MAE7D,MAAO,CAACA,KADRM,EAAUd,EAAKiE,MAAMvC,eAAeZ,OApBzBd,EA6BnBqE,SAAW,SAACzD,EAAQC,GAChB,IAAIG,EAAOhB,EAAK+C,MAAMvC,KAAKI,GAAQC,GAAQG,KAC3C,OAAKA,EACE8C,IAAE9C,GADS,IA/BHhB,EAmCnBsE,eAAiB,SAAC1D,EAAQC,GAEtB,OADeb,EAAK+C,MAAMvC,KAAKI,GAAQC,GAAQjB,OAExCkE,IAAElE,OADa,IArCPI,EAyCnBoE,SAAW,WACP,IAAI5D,EAAOR,EAAK+C,MAAMvC,KACtB,SAAIR,EAAKiE,MAAMhD,UAAUT,KAASR,EAAKiE,MAAM9C,UAAUX,KA3CxCR,EAiDnBuE,aAAe,WACXvE,EAAKmE,cACLnE,EAAKiE,MAAM5D,aAAc,EACzBL,EAAKiE,MAAM3D,WAAa,KACxBN,EAAKwC,cArDUxC,EAwDnBwC,WAAa,WACTxC,EAAKkE,aAAc,EACnBlE,EAAK0C,SAAS,CAACC,KAAM,KA1DN3C,EA6DnB4C,SAAW,WACP5C,EAAK0C,SAAS,SAACK,GAEX,MAAO,CAACJ,KADGK,SAASD,EAAMJ,MACL,MA9DzB3C,EAAK+C,MAAQ,CACTvC,KAAM,GACNmC,KAAM,GAJK3C,EAJvB,OAAAE,OAAAqD,EAAA,EAAArD,CAAA8D,EAAA9B,GAAAhC,OAAAsD,EAAA,EAAAtD,CAAA8D,EAAA,EAAAjC,IAAA,oBAAAmB,MAAA,WA8BQjD,KAAKkE,gBA9Bb,CAAApC,IAAA,SAAAmB,MAAA,WAwEa,IAAAsB,EAAAvE,KACDO,EAAOP,KAAK8C,MAAMvC,KActB,OACIoD,EAAA,qBAAKC,UAAWC,IAAE3E,SACdyE,EAAA,oBAAIC,UAAWC,IAAE1E,OAAjB,yFACAwE,EAAA,qBAAKC,UAAWC,IAAEzE,OACbY,KAAK8C,MAAMvC,KAAKU,OAASjB,KAAK8C,MAAMvC,KAAKiE,IAAI,SAACnF,EAAKsB,GAAN,OAC1CgD,EAAA,qBAAKC,UAAWC,IAAExE,IAAKyC,IAAK,MAAQnB,GAC/BtB,EAAImF,IAAI,SAACC,EAAM7D,GAAP,OACL+C,EAAA,qBACI7B,IAAK,OAASlB,EACdgD,UAAS,GAAAP,OAAKQ,IAAEvE,KAAP,KAAA+D,OAAekB,EAAKH,SAASzD,EAAQC,GAArC,2CAAAyC,OACPkB,EAAKF,eAAe1D,EAAQC,GADrB,0CAGT8D,QAAS,kBAAMH,EAAK7D,cAAcC,EAAQC,WAGrD,MAET+C,EAAA,cAACgB,EAAD,CACI1B,MAAOjD,KAAK8C,MAAMJ,KAClBE,SAAU5C,KAAK2C,SACfe,KAAM1D,KAAKiE,cAjCP,WACZ,IAAItE,EAAS4E,EAAKP,MAAM9C,UAAUX,GAClC,OAAIZ,GACA4E,EAAKN,aAAc,EACZN,EAAA,mBAAGC,UAAWC,IAAErE,SAAhB,yHACEK,EAAYF,GADd,MAGP4E,EAAKP,MAAMhD,UAAUT,IACrBgE,EAAKN,aAAc,EACbN,EAAA,mBAAGC,UAAWC,IAAErE,SAAhB,4KAEH,KAwBFA,GACDmE,EAAA,wBAAQC,UAAWC,IAAEtE,IAAKmF,QAAS1E,KAAKsE,cAAxC,gEA9GhBP,EAAA,CAA+BD,aCDlBc,EAAb,SAAA3C,GAAA,SAAA2C,IAAA,OAAA3E,OAAAC,EAAA,EAAAD,CAAAD,KAAA4E,GAAA3E,OAAAkC,EAAA,EAAAlC,CAAAD,KAAAC,OAAAmC,EAAA,EAAAnC,CAAA2E,GAAAC,MAAA7E,KAAA8E,YAAA,OAAA7E,OAAAqD,EAAA,EAAArD,CAAA2E,EAAA3C,GAAAhC,OAAAsD,EAAA,EAAAtD,CAAA2E,EAAA,EAAA9C,IAAA,SAAAmB,MAAA,WAEQ,OACIU,EAAA,qBAAKC,UAAWC,IAAE3E,SACdyE,EAAA,cAACoB,EAAD,WAJhBH,EAAA,CAA0Bd,aCOXkB,MANf,WACE,OACEC,EAAAC,EAAAC,cAACC,EAAD,OCKgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOV,EAAAC,EAAAC,cAACS,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.76d0b45e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tictactoe_wrapper__2vrMt\",\"title\":\"Tictactoe_title__PFeID\",\"table\":\"Tictactoe_table__1-AOh\",\"row\":\"Tictactoe_row__1azLT\",\"cell\":\"Tictactoe_cell__2oQK7\",\"btn\":\"Tictactoe_btn__23Qbm\",\"message\":\"Tictactoe_message__mN3Fq\",\"cross\":\"Tictactoe_cross__lF-MI\",\"zero\":\"Tictactoe_zero__GPqan\",\"winner\":\"Tictactoe_winner__S5mvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Main_wrapper__1YPAv\",\"title\":\"Main_title__3GtJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__2KmgB\"};","/**\r\n * Формат для объекта крестики-нолики\r\n * [[{name: \"cross\"|\"zero\"|null, winner: boolean},{},{}],[{},{},{}],[{},{},{}]]\r\n */\r\n\r\nexport const Translation = {\r\n    cross: \"крестик\",\r\n    zero: \"нолик\"\r\n}\r\n\r\nexport class TictactoeStore {\r\n    size = 3;\r\n    gameStarted = false;\r\n    whoWalkNow = null;\r\n\r\n    /**\r\n     * Формирует новую data с пустыми клетками,\r\n     * основываясь на размере поля size \r\n     */\r\n    getNullData = () => {\r\n        let data = [];\r\n        if (!this.size) return;\r\n        for (let i = 0; i < this.size; i++) {\r\n              data[i] = [];\r\n            for (let j = 0; j < this.size; j++) {\r\n              data[i][j] = {};\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    /** Возвращает новый массив с установленным крестиком или ноликом, \r\n     *  основываясь на том, кто ходил до этого  */\r\n    handlerStroke = (rIndex, cIndex, data) => {\r\n        let newData = deepClone(data);\r\n        if (!this.gameStarted) {\r\n            this.gameStarted = true;\r\n            this.whoWalkNow = 'cross';\r\n        } else {\r\n            this.whoWalkNow = this.whoWalkNow === 'cross' ? 'zero' : 'cross';\r\n        }\r\n        newData[rIndex][cIndex].name = this.whoWalkNow;\r\n        \r\n        return newData;\r\n    }\r\n\r\n    /**\r\n     * Проверка что закончились ходы\r\n     */\r\n    movesOver = (data) => {\r\n        if (!data.length) return false;\r\n        for (let i = 0; i < data.length; i++) {\r\n            for (let j = 0; j < data.length; j++) {\r\n                if (!data[i][j].name) {\r\n                    return false;\r\n                };\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * Находит победителя, если не находит - возвращает null,\r\n     * Если находит - возвращает name\r\n     */\r\n    getWinner = (data) => {\r\n        if (!data.length) return null;\r\n        for (let i = 0; i < data.length; i++) {\r\n            for (let j = 0; j < data.length; j++) {\r\n                if (data[i][j].winner) {\r\n                    return data[i][j].name;\r\n                };\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    checkRow = (data) => {\r\n        if (!data.length) return false;\r\n        let firstElem = data[0].name;\r\n        if (!firstElem) return false;\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i].name !== firstElem) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    checkLeftDiagonal = (data) => {\r\n        let firstElem = data[0][0].name;\r\n        if (!firstElem) return false;\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[i][i].name !== firstElem) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    checkRightDiagonal = (data) => {\r\n        let firstElem = data[data.length-1][0].name;\r\n        if (!firstElem) return false;\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (data[data.length-1-i][i].name !== firstElem) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    findWinnerСolumnIndex = (data) => {\r\n        if (!data.length) return -1;\r\n\r\n        for (let i = 0; i < data.length; i++) {\r\n            let firstElem = data[0][i].name;\r\n            if (!firstElem) continue;\r\n            let found = true;\r\n            for (let j = 0; j < data.length; j++) {\r\n                if (data[j][i].name !== firstElem) {\r\n                    found = false;\r\n                    break;\r\n                }\r\n            }\r\n            if (found) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * Выполняет проверки на победу \r\n     * и устанавливает клеткам свойство winner в true,\r\n     * если они находятся в ряду победителя\r\n     */\r\n    setWinnerStyle = (data) => {\r\n        let newData = deepClone(data); \r\n        if (!newData.length) return newData;\r\n        let isWinner = false;\r\n\r\n        /** Заполнена диагональ слева направо */\r\n        isWinner = this.checkLeftDiagonal(newData);\r\n        if (isWinner) {\r\n            for (let i = 0; i < newData.length; i++) {\r\n                newData[i][i].winner = true;\r\n            }\r\n            return newData;\r\n        }\r\n\r\n        /** Заполнен диагональ справа налево */\r\n        isWinner = this.checkRightDiagonal(newData);\r\n        if (isWinner) {\r\n            for (let i = 0; i < newData.length; i++) {\r\n                newData[data.length-1-i][i].winner = true;\r\n            }\r\n            return newData;\r\n        }\r\n\r\n        /** Заполнен один из рядов по горизонтали */\r\n        for (let i = 0; i < newData.length; i++) {\r\n            isWinner = this.checkRow(newData[i]);\r\n            if (isWinner) {\r\n                for (let j = 0; j < newData[i].length; j++) {\r\n                    newData[i][j].winner = true; \r\n                }\r\n                return newData;\r\n            }\r\n        }\r\n\r\n        /** Заполнен один из рядов по вертикали */\r\n        let columnIndex = this.findWinnerСolumnIndex(newData);\r\n        isWinner = columnIndex !== -1 ? true : false;\r\n        if (isWinner) {\r\n            for (let i = 0; i < newData.length; i++) {\r\n                newData[i][columnIndex].winner = true; \r\n            }\r\n            return newData;\r\n        }\r\n        return newData;\r\n    }\r\n}\r\n\r\nexport function deepClone(obj) {\r\n    if (obj === null || typeof obj !== \"object\") {\r\n      return obj;\r\n    }\r\n  \r\n    if (obj instanceof Array && obj.length) {\r\n      let copy = [];\r\n      for (let i = 0; i < obj.length; i++) {\r\n        copy[i] = deepClone(obj[i]);\r\n      }\r\n      return copy;\r\n    }\r\n  \r\n    if (obj instanceof Object) {\r\n      let copy = {};\r\n      for (let key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n          copy[key] = deepClone(obj[key]);\r\n        }\r\n      }\r\n      return copy;\r\n    }\r\n  }\r\n  ","import * as React from 'react';\r\nimport * as s from \"./Timer.module.scss\";\r\n\r\n/**\r\n * Timer - компонент отсчитывающий время в формате hh:mm:ss / mm:ss / ss\r\n * Необязательные props:\r\n * value: number - время в секундах, целое числовое значение\r\n * onChange: function - функция, которая будет вызываться с интервалом в 1 секунду\r\n * stop: boolean - если true, то вызов функции с интервалом останавливается, если false - возобновляется\r\n */\r\n\r\nexport class Timer extends React.Component {\r\n    timer;\r\n    timerWasStoped = false;\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTimer();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.stop) {\r\n            clearInterval(this.timer); \r\n            return false;\r\n        }\r\n        if (nextProps.stop === false && this.props.stop === true) {\r\n            this.setTimer();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    clearTimer = () => {\r\n        clearInterval(this.timer);\r\n        this.setState({time: 0})\r\n    } \r\n\r\n    setTimer = () => {\r\n        if (this.props.onChange && typeof this.props.onChange === \"function\") {\r\n            this.timer = setInterval(this.props.onChange, 1000);\r\n            return;\r\n        }\r\n        this.timer = setInterval(() => this.setState((state) => {\r\n            let time = parseInt(state.time);\r\n            return {time: time + 1}\r\n        }), 1000)\r\n    }\r\n\r\n    getTime = (value) => {\r\n        let seconds, minutes, hours;\r\n        seconds = value;\r\n        if (value >= 60) {\r\n            minutes = parseInt(value/60);\r\n            seconds = value - (minutes*60);\r\n        }\r\n        if (minutes >= 60) {\r\n            hours = parseInt(minutes/60);\r\n            minutes = minutes - (hours*60);\r\n        }\r\n        \r\n        let str;\r\n        if (hours) {\r\n            str = `${hours}:${minutes > 9 ? minutes: '0' + minutes}:${seconds > 9 ? seconds: '0' + seconds}`\r\n        } else if (minutes) {\r\n            str = `${minutes}:${seconds > 9 ? seconds: '0' + seconds}`\r\n        } else {\r\n            str = `${seconds}`\r\n        }\r\n        return str;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.timer}>Время: {this.getTime(this.props.value ? this.props.value : this.state.time)}</div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport s from './Tictactoe.module.scss';\r\nimport {TictactoeStore, Translation} from './TictactoeStore';\r\nimport {Timer} from \"../Timer/Timer\";\r\n\r\nexport class Tictactoe extends React.Component {\r\n    store = new TictactoeStore();\r\n    timerStoped = false;\r\n     \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            time: 0,\r\n        }\r\n    }\r\n\r\n    setNullData = () => {\r\n        this.setState({data: this.store.getNullData()})\r\n    }\r\n\r\n    handlerStroke = (rIndex, cIndex) => {\r\n        let target = this.state.data[rIndex][cIndex].name;\r\n        if (target) return;\r\n        if (this.gameOver()) {\r\n            return;\r\n        }\r\n        this.setState((state, props) => {\r\n            let newData = this.store.handlerStroke(rIndex, cIndex, state.data);\r\n            newData = this.store.setWinnerStyle(newData);\r\n            return {data: newData}\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setNullData();\r\n    }\r\n\r\n    getStyle = (rIndex, cIndex) => {\r\n        let name = this.state.data[rIndex][cIndex].name;\r\n        if (!name) return \"\";\r\n        return s[name];\r\n    }\r\n\r\n    getWinnerStyle = (rIndex, cIndex) => {\r\n        let isWinner = this.state.data[rIndex][cIndex].winner;\r\n        if (!isWinner) return \"\";\r\n        return s.winner;\r\n    }\r\n\r\n    gameOver = () => {\r\n        let data = this.state.data;\r\n        if (this.store.movesOver(data) || this.store.getWinner(data)) {\r\n            return true;\r\n        }\r\n        return false; \r\n    }\r\n\r\n    startNewGame = () => {\r\n        this.setNullData();\r\n        this.store.gameStarted = false;\r\n        this.store.whoWalkNow = null;\r\n        this.clearTimer();\r\n    }\r\n\r\n    clearTimer = () => {\r\n        this.timerStoped = false;\r\n        this.setState({time: 0})\r\n    } \r\n\r\n    setTimer = () => {\r\n        this.setState((state) => {\r\n            let time = parseInt(state.time);\r\n            return {time: time + 1}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let data = this.state.data;\r\n        const message = () => {\r\n            let winner = this.store.getWinner(data);\r\n            if (winner) {\r\n                this.timerStoped = true;\r\n                return <p className={s.message}>Игра окончена! \r\n                Победил {Translation[winner]}!</p>\r\n             }\r\n            if (this.store.movesOver(data)) {\r\n                this.timerStoped = true;\r\n               return <p className={s.message}>Игра окончена! Закончились ходы.</p>\r\n            }\r\n            return null;\r\n        }\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <h1 className={s.title}>Крестики-нолики</h1>\r\n                <div className={s.table}>\r\n                    {this.state.data.length ? this.state.data.map((row, rIndex)=>(\r\n                        <div className={s.row} key={'row' + rIndex}>\r\n                            {row.map((item, cIndex) => (\r\n                                <div \r\n                                    key={'cell' + cIndex} \r\n                                    className={`${s.cell} ${this.getStyle(rIndex, cIndex)} \r\n                                    ${this.getWinnerStyle(rIndex, cIndex)}\r\n                                    `} \r\n                                    onClick={() => this.handlerStroke(rIndex, cIndex)}/>\r\n                            ))}\r\n                        </div>\r\n                    )) : null}\r\n                </div>\r\n                <Timer \r\n                    value={this.state.time} \r\n                    onChange={this.setTimer}\r\n                    stop={this.timerStoped}\r\n                 />\r\n                {message()}\r\n                <button className={s.btn} onClick={this.startNewGame}>Новая игра</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport s from './Main.module.scss';\r\nimport {Tictactoe} from '../Tictactoe/Tictactoe';\r\n\r\nexport class Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <Tictactoe />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {Main} from './components/Main/Main'\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}