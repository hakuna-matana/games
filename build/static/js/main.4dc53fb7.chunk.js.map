{"version":3,"sources":["components/Tictactoe/Tictactoe.module.scss","components/Main/Main.module.scss","components/Timer/Timer.module.scss","components/Tictactoe/TictactoeStore.js","components/Timer/Timer.jsx","components/Tictactoe/Tictactoe.jsx","components/Main/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","wrapper","title","radioGroup","label","table","row","cell","btn","message","cross","zero","winner","timer","Translation","TictactoeStore","_this","this","Object","classCallCheck","size","gameStarted","whoWalkNow","mode","getNullData","data","i","j","handlerStroke","rIndex","cIndex","newData","deepClone","name","handlerStrokeBot","coord","botMove","_coord","slicedToArray","rI","lI","coordForWin","botMoveRandom","emptyCellsCount","found","diagonalSearch","rowSearch","columnSearch","emptyCells","length","elemName","push","searchRandomItemFromArray","arr","Math","floor","random","movesOver","getWinner","setWinnerStyle","checkLeftDiagonal","checkRightDiagonal","checkRow","columnIndex","findWinner–°olumnIndex","firstElem","obj","Array","copy","key","hasOwnProperty","Timer","_React$Component","props","possibleConstructorReturn","getPrototypeOf","call","timerWasStoped","clearTimer","clearInterval","setState","time","setTimer","onChange","setInterval","state","parseInt","getTime","value","seconds","minutes","hours","concat","inherits","createClass","nextProps","nextState","stop","react","className","s","React","Tictactoe","Map","store","timerStoped","setNullData","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","gameOver","setTimeout","_x","_x2","apply","arguments","getStyle","getWinnerStyle","startNewGame","modeHandler","selectMode","type","checked","_this2","map","item","onClick","Timer_Timer","Main","Tictactoe_Tictactoe","App","react_default","createElement","Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4dc53fb7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tictactoe_wrapper__2vrMt\",\"title\":\"Tictactoe_title__PFeID\",\"radioGroup\":\"Tictactoe_radioGroup__w0qXW\",\"label\":\"Tictactoe_label__2z3nw\",\"table\":\"Tictactoe_table__1-AOh\",\"row\":\"Tictactoe_row__1azLT\",\"cell\":\"Tictactoe_cell__2oQK7\",\"btn\":\"Tictactoe_btn__23Qbm\",\"message\":\"Tictactoe_message__mN3Fq\",\"cross\":\"Tictactoe_cross__lF-MI\",\"zero\":\"Tictactoe_zero__GPqan\",\"winner\":\"Tictactoe_winner__S5mvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Main_wrapper__1YPAv\",\"title\":\"Main_title__3GtJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__2KmgB\"};","/**\r\n * –§–æ—Ä–º–∞—Ç –¥–ª—è –æ–±—ä–µ–∫—Ç–∞ –∫—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏\r\n * [[{name: \"cross\"|\"zero\"|null, \r\n *    winner: boolean\r\n *   },{...},{...}],\r\n *  [{...},{...},{...}],\r\n *  [{...},{...},{...}]\r\n * ]\r\n */\r\n\r\nexport const Translation = {\r\n  cross: \"–∫—Ä–µ—Å—Ç–∏–∫\",\r\n  zero: \"–Ω–æ–ª–∏–∫\"\r\n}\r\n\r\nexport class TictactoeStore {\r\n  size = 3;\r\n  gameStarted = false;\r\n  whoWalkNow = null;\r\n  mode = \"alone\";\r\n\r\n  /**\r\n   * –§–æ—Ä–º–∏—Ä—É–µ—Ç –Ω–æ–≤—É—é data —Å –ø—É—Å—Ç—ã–º–∏ –∫–ª–µ—Ç–∫–∞–º–∏,\r\n   * –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ —Ä–∞–∑–º–µ—Ä–µ –ø–æ–ª—è size \r\n   */\r\n  getNullData = () => {\r\n    let data = [];\r\n    if (!this.size) return;\r\n    for (let i = 0; i < this.size; i++) {\r\n      data[i] = [];\r\n      for (let j = 0; j < this.size; j++) {\r\n        data[i][j] = {};\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  /** –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ —Å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –∫—Ä–µ—Å—Ç–∏–∫–æ–º –∏–ª–∏ –Ω–æ–ª–∏–∫–æ–º, \r\n   *  –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ —Ç–æ–º, –∫—Ç–æ —Ö–æ–¥–∏–ª –¥–æ —ç—Ç–æ–≥–æ  */\r\n  handlerStroke = (rIndex, cIndex, data, mode) => {\r\n    let newData = deepClone(data);\r\n    if (!this.gameStarted) {\r\n      this.gameStarted = true;\r\n      this.whoWalkNow = 'cross';\r\n      if (mode === \"bot\") {\r\n        this.mode = \"bot\"\r\n      } else {\r\n        this.mode = \"alone\"\r\n      }\r\n    } else {\r\n      this.whoWalkNow = this.whoWalkNow === 'cross' ? 'zero' : 'cross';\r\n    }\r\n    newData[rIndex][cIndex].name = this.whoWalkNow;\r\n    return newData;\r\n  }\r\n\r\n  handlerStrokeBot = (data) => {\r\n    let newData = deepClone(data);\r\n    let coord = this.botMove(newData);\r\n    if (coord) {\r\n      let [rI, lI] = coord;\r\n      this.whoWalkNow = 'zero';\r\n      newData[rI][lI].name = this.whoWalkNow;\r\n      return newData;\r\n    }\r\n    return data;\r\n  }\r\n\r\n  botMove = (data) => {\r\n    // –ø–æ–∏—Å–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π –±–æ—Ç (–Ω–æ–ª–∏–∫) –º–æ–∂–µ—Ç –ø–æ–±–µ–¥–∏—Ç—å\r\n    let coord = this.coordForWin(data, \"zero\", 1);\r\n    if (coord) return coord;\r\n    // –ø–æ–∏—Å–∫ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –≤ –∫–æ—Ç–æ—Ä–æ–π –∏–≥—Ä–æ–∫ (–∫—Ä–µ—Å—Ç–∏–∫) –º–æ–∂–µ—Ç –ø—Ä–æ–∏–≥—Ä–∞—Ç—å\r\n    coord = this.coordForWin(data, \"cross\", 1);\r\n    if (coord) return coord;\r\n    // –ø–æ–∏—Å–∫ –ø—É—Å—Ç–æ–π –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –Ω–∞ —Ç–æ–π –∂–µ –¥–∏–∞–≥–æ–Ω–∞–ª–∏, —Å—Ç—Ä–æ–∫–µ, —Ä—è–¥—É, –≤ –∫–æ—Ç–æ—Ä—É—é —Å—Ö–æ–¥–∏–ª –∏–≥—Ä–æ–∫\r\n    coord = this.coordForWin(data, \"cross\", 2);\r\n    if (coord) return coord;\r\n    coord = this.botMoveRandom(data);\r\n    return coord;\r\n  }\r\n\r\n  /**\r\n   * –ò—â–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –ø–æ–±–µ–¥—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ \r\n   * [rigthIndex, leftIndex] –µ—Å–ª–∏ –µ—Å—Ç—å –≤–æ–∑–º–æ–∂–Ω—ã–π —Ö–æ–¥, –∏–ª–∏ null, –µ—Å–ª–∏ –Ω–µ—Ç\r\n   */\r\n  coordForWin = (data, name, emptyCellsCount) => {\r\n    let coord = null;\r\n    let found = this.diagonalSearch(data, name, emptyCellsCount);\r\n    if (found) return found;\r\n    found = this.rowSearch(data, name, emptyCellsCount);\r\n    if (found) return found;\r\n    found = this.columnSearch(data, name, emptyCellsCount);\r\n    if (found) return found;\r\n    return coord;\r\n  }\r\n\r\n  diagonalSearch = (data, name, emptyCellsCount) => {\r\n    let emptyCells = [];\r\n    /**–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–≥–æ–Ω–∞–ª—å —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ */\r\n    for (let i = 0; i < data.length; i++) {\r\n      let elemName = data[i][i].name;      \r\n      if (elemName && elemName !== name) {\r\n        emptyCells = [];\r\n        break;\r\n      }\r\n      if (!elemName) emptyCells.push([i,i]);\r\n    }\r\n    if (emptyCells.length === emptyCellsCount) {\r\n      return emptyCells[0];\r\n    }\r\n    /**–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–≥–æ–Ω–∞–ª—å —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ */\r\n    emptyCells = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      let elemName = data[data.length - 1 - i][i].name;\r\n      if (elemName && elemName !== name) return null;\r\n      if (!elemName) emptyCells.push([data.length - 1 - i,i]);\r\n    }\r\n    if (emptyCells.length === emptyCellsCount) {\r\n      return emptyCells[0];\r\n    }\r\n    return null;\r\n  }\r\n\r\n  rowSearch = (data, name, emptyCellsCount) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      let emptyCells = [];\r\n      for (let j = 0; j < data[i].length; j++) {\r\n        let elemName = data[i][j].name;\r\n        if (elemName && elemName !== name) {\r\n          emptyCells = [];\r\n          break;\r\n        }\r\n        if (!elemName) emptyCells.push([i,j]); \r\n      }\r\n      if (emptyCells.length === emptyCellsCount) {\r\n        return emptyCells[0];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  columnSearch = (data, name, emptyCellsCount) => {\r\n    for (let i = 0; i < data.length; i++) {\r\n      let emptyCells = [];\r\n      for (let j = 0; j < data[i].length; j++) {\r\n        let elemName = data[j][i].name;\r\n        if (elemName && elemName !== name) {\r\n          emptyCells = [];\r\n          break;\r\n        }\r\n        if (!elemName) emptyCells.push([j,i]); \r\n      }\r\n      if (emptyCells.length === emptyCellsCount) {\r\n        return emptyCells[0];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  searchRandomItemFromArray = (arr) => {\r\n    if (!arr) return;\r\n    let randomIndex = Math.floor(Math.random() * (arr.length - 0)) + 0;\r\n    return arr[randomIndex];\r\n  }\r\n\r\n  botMoveRandom = (data) => {\r\n    let emptyCells = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      let row = data[i];\r\n      for (let j = 0; j < row.length; j++) {\r\n        if (!row[j].name) emptyCells.push([i, j]);\r\n      }\r\n    }\r\n    return this.searchRandomItemFromArray(emptyCells);\r\n  }\r\n\r\n  /**\r\n   * –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ö–æ–¥—ã, \r\n   * –µ—Å–ª–∏ –≤—Å–µ –∫–ª–µ—Ç–∫–∏ –∑–∞–Ω—è—Ç—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç true, \r\n   * –µ—Å–ª–∏ –µ—Å—Ç—å –ø—É—Å—Ç—ã–µ –∫–ª–µ—Ç–∫–∏, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç false\r\n   */\r\n  movesOver = (data) => {\r\n    if (!data.length) return false;\r\n    for (let i = 0; i < data.length; i++) {\r\n      for (let j = 0; j < data.length; j++) {\r\n        if (!data[i][j].name) {\r\n          return false;\r\n        };\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * –ù–∞—Ö–æ–¥–∏—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç null,\r\n   * –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏—Ç - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç name(–µ–≥–æ –∏–º—è)\r\n   */\r\n  getWinner = (data) => {\r\n    if (!data.length) return null;\r\n    for (let i = 0; i < data.length; i++) {\r\n      for (let j = 0; j < data.length; j++) {\r\n        if (data[i][j].winner) {\r\n          return data[i][j].name;\r\n        };\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  \r\n  /**\r\n   * –í—ã–ø–æ–ª–Ω—è–µ—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –ø–æ–±–µ–¥—É \r\n   * –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∫–ª–µ—Ç–∫–∞–º —Å–≤–æ–π—Å—Ç–≤–æ winner –≤ true,\r\n   * –µ—Å–ª–∏ –æ–Ω–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ —Ä—è–¥—É –ø–æ–±–µ–¥–∏—Ç–µ–ª—è\r\n   */\r\n  setWinnerStyle = (data) => {\r\n    let newData = deepClone(data);\r\n    if (!newData.length) return newData;\r\n    let isWinner = false;\r\n\r\n    /** –ó–∞–ø–æ–ª–Ω–µ–Ω–∞ –¥–∏–∞–≥–æ–Ω–∞–ª—å —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ */\r\n    isWinner = this.checkLeftDiagonal(newData);\r\n    if (isWinner) {\r\n      for (let i = 0; i < newData.length; i++) {\r\n        newData[i][i].winner = true;\r\n      }\r\n      return newData;\r\n    }\r\n\r\n    /** –ó–∞–ø–æ–ª–Ω–µ–Ω –¥–∏–∞–≥–æ–Ω–∞–ª—å —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ */\r\n    isWinner = this.checkRightDiagonal(newData);\r\n    if (isWinner) {\r\n      for (let i = 0; i < newData.length; i++) {\r\n        newData[data.length - 1 - i][i].winner = true;\r\n      }\r\n      return newData;\r\n    }\r\n\r\n    /** –ó–∞–ø–æ–ª–Ω–µ–Ω –æ–¥–∏–Ω –∏–∑ —Ä—è–¥–æ–≤ –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ */\r\n    for (let i = 0; i < newData.length; i++) {\r\n      isWinner = this.checkRow(newData[i]);\r\n      if (isWinner) {\r\n        for (let j = 0; j < newData[i].length; j++) {\r\n          newData[i][j].winner = true;\r\n        }\r\n        return newData;\r\n      }\r\n    }\r\n\r\n    /** –ó–∞–ø–æ–ª–Ω–µ–Ω –æ–¥–∏–Ω –∏–∑ —Ä—è–¥–æ–≤ –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ */\r\n    let columnIndex = this.findWinner–°olumnIndex(newData);\r\n    isWinner = columnIndex !== -1 ? true : false;\r\n    if (isWinner) {\r\n      for (let i = 0; i < newData.length; i++) {\r\n        newData[i][columnIndex].winner = true;\r\n      }\r\n      return newData;\r\n    }\r\n    return newData;\r\n  }\r\n\r\n  checkRow = (data) => {\r\n    if (!data.length) return false;\r\n    let firstElem = data[0].name;\r\n    if (!firstElem) return false;\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i].name !== firstElem) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  checkLeftDiagonal = (data) => {\r\n    let firstElem = data[0][0].name;\r\n    if (!firstElem) return false;\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[i][i].name !== firstElem) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  checkRightDiagonal = (data) => {\r\n    let firstElem = data[data.length - 1][0].name;\r\n    if (!firstElem) return false;\r\n    for (let i = 0; i < data.length; i++) {\r\n      if (data[data.length - 1 - i][i].name !== firstElem) return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  findWinner–°olumnIndex = (data) => {\r\n    if (!data.length) return -1;\r\n\r\n    for (let i = 0; i < data.length; i++) {\r\n      let firstElem = data[0][i].name;\r\n      if (!firstElem) continue;\r\n      let found = true;\r\n      for (let j = 0; j < data.length; j++) {\r\n        if (data[j][i].name !== firstElem) {\r\n          found = false;\r\n          break;\r\n        }\r\n      }\r\n      if (found) {\r\n        return i;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n}\r\n\r\nexport function deepClone(obj) {\r\n  if (obj === null || typeof obj !== \"object\") {\r\n    return obj;\r\n  }\r\n\r\n  if (obj instanceof Array && obj.length) {\r\n    let copy = [];\r\n    for (let i = 0; i < obj.length; i++) {\r\n      copy[i] = deepClone(obj[i]);\r\n    }\r\n    return copy;\r\n  }\r\n\r\n  if (obj instanceof Object) {\r\n    let copy = {};\r\n    for (let key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        copy[key] = deepClone(obj[key]);\r\n      }\r\n    }\r\n    return copy;\r\n  }\r\n}\r\n","import * as React from 'react';\r\nimport * as s from \"./Timer.module.scss\";\r\n\r\n/**\r\n * Timer - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç—Å—á–∏—Ç—ã–≤–∞—é—â–∏–π –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ hh:mm:ss / mm:ss / ss\r\n * –ù–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ props:\r\n * value: number - –≤—Ä–µ–º—è –≤ —Å–µ–∫—É–Ω–¥–∞—Ö, —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ\r\n * onChange: function - —Ñ—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –≤ 1 —Å–µ–∫—É–Ω–¥—É\r\n * stop: boolean - –µ—Å–ª–∏ true, —Ç–æ –≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è, –µ—Å–ª–∏ false - –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è\r\n */\r\n\r\nexport class Timer extends React.Component {\r\n    timer;\r\n    timerWasStoped = false;\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTimer();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.stop) {\r\n            clearInterval(this.timer); \r\n            return false;\r\n        }\r\n        if (nextProps.stop === false && this.props.stop === true) {\r\n            this.setTimer();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    clearTimer = () => {\r\n        clearInterval(this.timer);\r\n        this.setState({time: 0})\r\n    } \r\n\r\n    setTimer = () => {\r\n        if (this.props.onChange && typeof this.props.onChange === \"function\") {\r\n            this.timer = setInterval(this.props.onChange, 1000);\r\n            return;\r\n        }\r\n        this.timer = setInterval(() => this.setState((state) => {\r\n            let time = parseInt(state.time);\r\n            return {time: time + 1}\r\n        }), 1000)\r\n    }\r\n\r\n    getTime = (value) => {\r\n        let seconds, minutes, hours;\r\n        seconds = value;\r\n        if (value >= 60) {\r\n            minutes = parseInt(value/60);\r\n            seconds = value - (minutes*60);\r\n        }\r\n        if (minutes >= 60) {\r\n            hours = parseInt(minutes/60);\r\n            minutes = minutes - (hours*60);\r\n        }\r\n        \r\n        let str;\r\n        if (hours) {\r\n            str = `${hours}:${minutes > 9 ? minutes: '0' + minutes}:${seconds > 9 ? seconds: '0' + seconds}`\r\n        } else if (minutes) {\r\n            str = `${minutes}:${seconds > 9 ? seconds: '0' + seconds}`\r\n        } else {\r\n            str = `${seconds}`\r\n        }\r\n        return str;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.timer}>–í—Ä–µ–º—è: {this.getTime(this.props.value ? this.props.value : this.state.time)}</div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport s from './Tictactoe.module.scss';\r\nimport { TictactoeStore, Translation } from './TictactoeStore';\r\nimport { Timer } from \"../Timer/Timer\";\r\n\r\nconst ModeTranslate = new Map([\r\n  [\"bot\", \"–°–µ–π—á–∞—Å –∏–¥–µ—Ç –∏–≥—Ä–∞ –≤ —Ä–µ–∂–∏–º–µ –±–æ—Ç–∞\"],\r\n  [\"alone\", \"–°–µ–π—á–∞—Å –∏–¥–µ—Ç –∏–≥—Ä–∞ –≤ —Ä–µ–∂–∏–º–µ —Å–∞–º —Å —Å–æ–±–æ–π\"]\r\n])\r\n\r\nexport class Tictactoe extends React.Component {\r\n  store = new TictactoeStore();\r\n  timerStoped = false;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      time: 0,\r\n      mode: \"bot\",\r\n    }\r\n  }\r\n\r\n  setNullData = () => {\r\n    this.setState({ data: this.store.getNullData() })\r\n  }\r\n\r\n  /**\r\n   * –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–∞ –Ω–∞ –∫–ª–µ—Ç–∫—É \r\n   * */\r\n  handlerStroke = async (rIndex, cIndex) => {\r\n    let target = this.state.data[rIndex][cIndex].name;\r\n    if (target) return;\r\n    if (this.gameOver()) return;\r\n    await this.setState((state, props) => {\r\n      let newData = this.store.handlerStroke(rIndex, cIndex, state.data, state.mode);\r\n      newData = this.store.setWinnerStyle(newData);\r\n      return { data: newData }\r\n    });\r\n    if (this.store.mode === \"bot\" && this.store.whoWalkNow === \"cross\") {\r\n      if (this.gameOver()) return;\r\n      await setTimeout(() => this.setState((state, props) => {\r\n        let newData = this.store.handlerStrokeBot(state.data);\r\n        newData = this.store.setWinnerStyle(newData);\r\n        return { data: newData }\r\n      }), 200);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setNullData();\r\n  }\r\n\r\n  getStyle = (rIndex, cIndex) => {\r\n    let name = this.state.data[rIndex][cIndex].name;\r\n    if (!name) return \"\";\r\n    return s[name];\r\n  }\r\n\r\n  getWinnerStyle = (rIndex, cIndex) => {\r\n    let isWinner = this.state.data[rIndex][cIndex].winner;\r\n    if (!isWinner) return \"\";\r\n    return s.winner;\r\n  }\r\n\r\n  /**\r\n   * –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∏–≥—Ä–∞ –∑–∞–∫–æ–Ω—á–∏–ª–∞—Å—å - –∑–∞–Ω—è—Ç—ã –≤—Å–µ –∫–ª–µ—Ç–∫–∏ –∏–ª–∏ –µ—Å—Ç—å –ø–æ–±–µ–¥–∏—Ç–µ–ª—å\r\n   */\r\n  gameOver = () => {\r\n    let data = this.state.data;\r\n    if (this.store.movesOver(data) || this.store.getWinner(data)) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  startNewGame = () => {\r\n    this.setNullData();\r\n    this.store.gameStarted = false;\r\n    this.store.whoWalkNow = null;\r\n    this.clearTimer();\r\n  }\r\n\r\n  clearTimer = () => {\r\n    this.timerStoped = false;\r\n    this.setState({ time: 0 })\r\n  }\r\n\r\n  setTimer = () => {\r\n    this.setState((state) => {\r\n      let time = parseInt(state.time);\r\n      return { time: time + 1 }\r\n    })\r\n  }\r\n  modeHandler = () => {\r\n    this.setState((state) => {\r\n      let mode = state.mode === \"bot\" ? \"alone\" : \"bot\";\r\n      return { mode }\r\n    })\r\n  }\r\n  selectMode = () => {\r\n    return (\r\n      <div className={s.radioGroup}>\r\n        <label className={s.label}>\r\n          <input \r\n            type=\"radio\"\r\n            checked={this.state.mode === \"bot\"} \r\n            name=\"mode\"\r\n            onChange={this.modeHandler}\r\n          />\r\n          –° –±–æ—Ç–æ–º\r\n        </label>\r\n        <label className={s.label}>\r\n          <input \r\n            type=\"radio\" \r\n            checked={this.state.mode === \"alone\"} \r\n            name=\"mode\"\r\n            onChange={this.modeHandler}\r\n          />\r\n          –°–∞–º —Å —Å–æ–±–æ–π\r\n        </label>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    let data = this.state.data;\r\n    const message = () => {\r\n      let winner = this.store.getWinner(data);\r\n      if (winner) {\r\n        this.timerStoped = true;\r\n        return <p className={s.message}>–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞!\r\n                –ü–æ–±–µ–¥–∏–ª {Translation[winner]}!</p>\r\n      }\r\n      if (this.store.movesOver(data)) {\r\n        this.timerStoped = true;\r\n        return <p className={s.message}>–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞! –ó–∞–∫–æ–Ω—á–∏–ª–∏—Å—å —Ö–æ–¥—ã.</p>\r\n      }\r\n      return null;\r\n    }\r\n    return (\r\n      <div className={s.wrapper}>\r\n        <h1 className={s.title}>–ö—Ä–µ—Å—Ç–∏–∫–∏-–Ω–æ–ª–∏–∫–∏</h1>\r\n        <div className={s.table}>\r\n          {this.state.data.length ? this.state.data.map((row, rIndex) => (\r\n            <div className={s.row} key={'row' + rIndex}>\r\n              {row.map((item, cIndex) => (\r\n                <div\r\n                  key={'cell' + cIndex}\r\n                  className={`${s.cell} ${this.getStyle(rIndex, cIndex)} \r\n                                    ${this.getWinnerStyle(rIndex, cIndex)}\r\n                                    `}\r\n                  onClick={() => this.handlerStroke(rIndex, cIndex)} />\r\n              ))}\r\n            </div>\r\n          )) : null}\r\n        </div>\r\n        <Timer\r\n          value={this.state.time}\r\n          onChange={this.setTimer}\r\n          stop={this.timerStoped}\r\n        />\r\n        {this.selectMode()}\r\n        {message()}\r\n        <button className={s.btn} onClick={this.startNewGame}>–ù–æ–≤–∞—è –∏–≥—Ä–∞</button>\r\n      </div>\r\n    )\r\n  }\r\n}","import * as React from 'react';\r\nimport s from './Main.module.scss';\r\nimport {Tictactoe} from '../Tictactoe/Tictactoe';\r\n\r\nexport class Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <Tictactoe />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {Main} from './components/Main/Main'\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}