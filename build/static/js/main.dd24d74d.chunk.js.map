{"version":3,"sources":["components/Tictactoe/Tictactoe.module.scss","components/Main/Main.module.scss","components/Timer/Timer.module.scss","components/Tictactoe/TictactoeStore.js","components/Timer/Timer.jsx","components/Tictactoe/Tictactoe.jsx","components/Main/Main.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","wrapper","title","table","row","cell","btn","message","cross","zero","winner","timer","TictactoeStore","_this","this","Object","classCallCheck","size","gameStarted","whoWalkNow","getNullData","data","i","j","handlerStroke","rIndex","cIndex","newData","copyArray","arr","Array","copy","length","deadHeat","isVictory","victory","leftDiagonal","push","checkRow","rightDiagonal","verticalData","forEach","index","prevElem","isWinner","found","foundR","foundH","findWinner","Timer","_React$Component","props","possibleConstructorReturn","getPrototypeOf","call","timerWasStoped","clearTimer","clearInterval","setState","time","setTimer","onChange","setInterval","state","parseInt","getTime","value","seconds","minutes","hours","concat","inherits","createClass","key","nextProps","nextState","stop","react","className","s","React","Tictactoe","store","timerStoped","setNullData","gameOver","getStyle","target","startNewGame","_this2","map","item","onClick","Timer_Timer","Main","apply","arguments","Tictactoe_Tictactoe","App","react_default","a","createElement","Main_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.dd24d74d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Tictactoe_wrapper__2vrMt\",\"title\":\"Tictactoe_title__PFeID\",\"table\":\"Tictactoe_table__1-AOh\",\"row\":\"Tictactoe_row__1azLT\",\"cell\":\"Tictactoe_cell__2oQK7\",\"btn\":\"Tictactoe_btn__23Qbm\",\"message\":\"Tictactoe_message__mN3Fq\",\"cross\":\"Tictactoe_cross__lF-MI\",\"zero\":\"Tictactoe_zero__GPqan\",\"winner\":\"Tictactoe_winner__S5mvC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Main_wrapper__1YPAv\",\"title\":\"Main_title__3GtJ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timer\":\"Timer_timer__2KmgB\"};","export class TictactoeStore {\r\n    size = 3;\r\n    gameStarted = false;\r\n    whoWalkNow = null;\r\n\r\n    constructor() {\r\n    \r\n    }\r\n\r\n    getNullData = () => {\r\n        let data = [];\r\n        if (!this.size) return;\r\n        for (let i = 0; i < this.size; i++) {\r\n              data[i] = [];\r\n            for (let j = 0; j < this.size; j++) {\r\n              data[i][j] = null;\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n\r\n    handlerStroke = (rIndex, cIndex, data) => {\r\n        let newData = copyArray(data);\r\n        if (!this.gameStarted) {\r\n            this.gameStarted = true;\r\n            this.whoWalkNow = 'cross';\r\n        } else {\r\n            this.whoWalkNow = this.whoWalkNow === 'cross' ? 'zero' : 'cross';\r\n        }\r\n        newData[rIndex][cIndex] = this.whoWalkNow;\r\n        return newData;\r\n    }\r\n\r\n    deadHeat = (data) => {\r\n        if (!data.length) return false;\r\n        for (let i = 0; i < data.length; i++) {\r\n            let row = data[i];\r\n            for (let j = 0; j < row.length; j++) {\r\n                if (!row[j]) {\r\n                    return false\r\n                };\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isVictory = (data) => {\r\n        let victory = false;\r\n        if (!data.length) return false;\r\n        //Заполнена диагональ слева направо\r\n        let leftDiagonal = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            leftDiagonal.push(data[i][i]);\r\n        }\r\n        if (this.checkRow(leftDiagonal)) victory = true;\r\n    \r\n        // Заполнен диагональ справа налево\r\n        let rightDiagonal = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            rightDiagonal.push(data[data.length-1-i][i]);\r\n        }\r\n        if (this.checkRow(rightDiagonal)) victory = true;\r\n    \r\n        // Заполнен один из рядов по вертикали\r\n        let verticalData = [[],[],[]];\r\n        data.forEach((row, index)=>{\r\n            // if (victory) return;\r\n            for (let i = 0; i < row.length; i++) {\r\n                verticalData[i][index] = row[i]\r\n            }\r\n        });\r\n        for (let i = 0; i < verticalData.length; i++) {\r\n            if (this.checkRow(verticalData[i])) victory = true;\r\n        }\r\n    \r\n        // Заполнен один из рядов по горизонтали\r\n        for (let i = 0; i < data.length; i++) {\r\n           if (this.checkRow(data[i])) victory = true;\r\n        }\r\n        return victory;\r\n    }\r\n\r\n    //Проверяем что в одномерном массиве все элементы одинаковые\r\n\r\n    checkRow = (arr) => {\r\n        if (!arr.length) return false;\r\n        let prevElem = arr[0];\r\n        if (!prevElem) return false;\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] !== prevElem) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    isWinner = (rIndex, cIndex, data) => {\r\n        let isWinner = false;\r\n        if (!data.length) return false;\r\n    \r\n        //Заполнена диагональ слева направо\r\n        let found = false;\r\n        let leftDiagonal = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (rIndex === i && cIndex === i) {\r\n                found = true;\r\n            }\r\n            leftDiagonal.push(data[i][i]);\r\n        }\r\n        if (this.checkRow(leftDiagonal) && found) {\r\n            isWinner = true;\r\n        };\r\n\r\n        // Заполнен диагональ справа налево\r\n        let foundR = false;\r\n        let rightDiagonal = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (rIndex === data.length-1-i && cIndex === i) {\r\n                foundR = true;\r\n            }\r\n            rightDiagonal.push(data[data.length-1-i][i]);\r\n        }\r\n        if (this.checkRow(rightDiagonal) && foundR) {\r\n            isWinner = true;\r\n        }\r\n\r\n        // Заполнен один из рядов по вертикали\r\n        // let foundV = false;\r\n        // let verticalData = [[],[],[]];\r\n        // data.forEach((row, index) => {\r\n        //     for (let i = 0; i < row.length; i++) {\r\n        //         verticalData[i][index] = row[i]\r\n        //         if (rIndex === i && cIndex === index) {\r\n        //             foundV = true\r\n        //         }\r\n        //     }\r\n        // });\r\n        // for (let i = 0; i < verticalData.length; i++) {\r\n        //     if (this.checkRow(verticalData[i]) && foundV) {\r\n        //         isWinner = true;\r\n        //     }\r\n        // }\r\n    \r\n        // Заполнен один из рядов по горизонтали\r\n        let foundH = false;\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (this.checkRow(data[i])) {\r\n                for (let j = 0; j < data[i].length; j++) {\r\n                    if (rIndex === i && cIndex === j) {\r\n                        foundH = true\r\n                    }\r\n                }\r\n                if (foundH) {\r\n                    isWinner = true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isWinner;\r\n    }\r\n\r\n    findWinner = (data) => {\r\n        let winner = null;\r\n        if (!data.length) return false;\r\n        //Заполнена диагональ слева направо\r\n        let leftDiagonal = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            leftDiagonal.push(data[i][i]);\r\n        }\r\n        if (this.checkRow(leftDiagonal)) {\r\n            winner = leftDiagonal[0];\r\n            return winner;\r\n        };\r\n    \r\n        // Заполнен диагональ справа налево\r\n        let rightDiagonal = [];\r\n        for (let i = 0; i < data.length; i++) {\r\n            rightDiagonal.push(data[data.length-1-i][i]);\r\n        }\r\n        if (this.checkRow(rightDiagonal)) {\r\n            winner = rightDiagonal[0];\r\n            return winner;\r\n        };\r\n    \r\n        // Заполнен один из рядов по вертикали\r\n        let verticalData = [[],[],[]];\r\n        data.forEach((row, index)=>{\r\n            for (let i = 0; i < row.length; i++) {\r\n                verticalData[i][index] = row[i]\r\n            }\r\n        });\r\n        for (let i = 0; i < verticalData.length; i++) {\r\n            if (this.checkRow(verticalData[i])) {\r\n                winner = verticalData[i][0];\r\n                return winner;\r\n            };\r\n        }\r\n    \r\n        // Заполнен один из рядов по горизонтали\r\n        for (let i = 0; i < data.length; i++) {\r\n           if (this.checkRow(data[i])) {\r\n            winner = data[i][0];\r\n            return winner;\r\n           };\r\n        }\r\n        return winner;\r\n    }\r\n}\r\n\r\nfunction copyArray(arr) {\r\n    if (arr instanceof Array) {\r\n        let copy = [];\r\n        for (let i = 0; i < arr.length; i++) {\r\n            copy[i] = copyArray(arr[i]);\r\n        }\r\n        return copy;\r\n    }\r\n    return arr;\r\n}","import * as React from 'react';\r\nimport * as s from \"./Timer.module.scss\";\r\n\r\n/**\r\n * Timer - компонент отсчитывающий время в формате hh:mm:ss / mm:ss / ss\r\n * Необязательные props:\r\n * value: number - время в секундах, целое числовое значение\r\n * onChange: function - функция, которая будет вызываться с интервалом в 1 секунду\r\n * stop: boolean - если true, то вызов функции с интервалом останавливается, если false - возобновляется\r\n */\r\n\r\nexport class Timer extends React.Component {\r\n    timer;\r\n    timerWasStoped = false;\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: 0,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setTimer();\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (nextProps.stop) {\r\n            clearInterval(this.timer); \r\n            return false;\r\n        }\r\n        if (nextProps.stop === false && this.props.stop === true) {\r\n            this.setTimer();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    clearTimer = () => {\r\n        clearInterval(this.timer);\r\n        this.setState({time: 0})\r\n    } \r\n\r\n    setTimer = () => {\r\n        if (this.props.onChange && typeof this.props.onChange === \"function\") {\r\n            this.timer = setInterval(this.props.onChange, 1000);\r\n            return;\r\n        }\r\n        this.timer = setInterval(() => this.setState((state) => {\r\n            let time = parseInt(state.time);\r\n            return {time: time + 1}\r\n        }), 1000)\r\n    }\r\n\r\n    getTime = (value) => {\r\n        let seconds, minutes, hours;\r\n        seconds = value;\r\n        if (value >= 60) {\r\n            minutes = parseInt(value/60);\r\n            seconds = value - (minutes*60);\r\n        }\r\n        if (minutes >= 60) {\r\n            hours = parseInt(minutes/60);\r\n            minutes = minutes - (hours*60);\r\n        }\r\n        \r\n        let str;\r\n        if (hours) {\r\n            str = `${hours}:${minutes > 9 ? minutes: '0' + minutes}:${seconds > 9 ? seconds: '0' + seconds}`\r\n        } else if (minutes) {\r\n            str = `${minutes}:${seconds > 9 ? seconds: '0' + seconds}`\r\n        } else {\r\n            str = `${seconds}`\r\n        }\r\n        return str;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.timer}>Время: {this.getTime(this.props.value ? this.props.value : this.state.time)}</div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport s from './Tictactoe.module.scss';\r\nimport { TictactoeStore } from './TictactoeStore';\r\nimport {Timer} from \"../Timer/Timer\";\r\n\r\nexport class Tictactoe extends React.Component {\r\n    store = new TictactoeStore();\r\n    timerStoped = false;\r\n     \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            time: 0,\r\n        }\r\n    }\r\n\r\n    setNullData = () => {\r\n        this.setState({data: this.store.getNullData()})\r\n    }\r\n\r\n    handlerStroke = (rIndex, cIndex) => {\r\n        let target = this.state.data[rIndex][cIndex];\r\n        if (target) return;\r\n        if (this.gameOver()) {\r\n            return;\r\n        }\r\n        this.setState((state, props) => {\r\n            let data = state.data;\r\n            return {data: this.store.handlerStroke(rIndex, cIndex, data)}\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setNullData();\r\n    }\r\n\r\n    getStyle = (rIndex, cIndex) => {\r\n        let target = this.state.data[rIndex][cIndex];\r\n        if (!target) return \"\";\r\n        return s[target];\r\n    }\r\n\r\n    gameOver = () => {\r\n        let data = this.state.data;\r\n        if (this.store.deadHeat(data)) {\r\n            return true;\r\n        }\r\n        if (this.store.isVictory(data)) return true;\r\n        return false; \r\n    }\r\n\r\n    startNewGame = () => {\r\n        this.setNullData();\r\n        this.store.gameStarted = false;\r\n        this.store.whoWalkNow = null;\r\n        this.clearTimer();\r\n    }\r\n\r\n    clearTimer = () => {\r\n        this.timerStoped = false;\r\n        this.setState({time: 0})\r\n    } \r\n\r\n    setTimer = () => {\r\n        this.setState((state) => {\r\n            let time = parseInt(state.time);\r\n            return {time: time + 1}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let data = this.state.data;\r\n        const message = () => {\r\n            let winner = this.store.findWinner(data);\r\n            if (winner) {\r\n                this.timerStoped = true;\r\n                return <p className={s.message}>Игра окончена! \r\n                Победил {winner === 'cross' ? 'крестик' : 'нолик'}!</p>\r\n             }\r\n            if (this.store.deadHeat(data)) {\r\n                this.timerStoped = true;\r\n               return <p className={s.message}>Игра окончена! Закончились ходы.</p>\r\n            }\r\n            return null;\r\n        }\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <h1 className={s.title}>Крестики-нолики</h1>\r\n                <div className={s.table}>\r\n                    {this.state.data.length ? this.state.data.map((row, rIndex)=>(\r\n                        <div className={s.row} key={'row' + rIndex}>\r\n                            {row.map((item, cIndex) => (\r\n                                <div \r\n                                    key={'cell' + cIndex} \r\n                                    className={`${s.cell} ${this.getStyle(rIndex, cIndex)} ${this.store.isWinner(rIndex, cIndex, this.state.data) ? s.winner : \"\"}`} \r\n                                    onClick={() => this.handlerStroke(rIndex, cIndex)}/>\r\n                            ))}\r\n                        </div>\r\n                    )) : null}\r\n                </div>\r\n                <Timer \r\n                    value={this.state.time} \r\n                    onChange={this.setTimer}\r\n                    stop={this.timerStoped}\r\n                 />\r\n                {message()}\r\n                <button className={s.btn} onClick={this.startNewGame}>Новая игра</button>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from 'react';\r\nimport s from './Main.module.scss';\r\nimport {Tictactoe} from '../Tictactoe/Tictactoe';\r\n\r\nexport class Main extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className={s.wrapper}>\r\n                <Tictactoe />\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {Main} from './components/Main/Main'\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}